=begin
#Cloudsmith API

#The API to the Cloudsmith Service

OpenAPI spec version: v1
Contact: support@cloudsmith.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module CloudsmithApi
  class FilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Request URL(s) to POST new package file upload(s) to.
    # Request URL(s) to POST new package file upload(s) to.
    # @param owner 
    # @param repo 
    # @param [Hash] opts the optional parameters
    # @option opts [FilesCreate] :data 
    # @return [PackageFileUpload]
    def files_create(owner, repo, opts = {})
      data, _status_code, _headers = files_create_with_http_info(owner, repo, opts)
      return data
    end

    # Request URL(s) to POST new package file upload(s) to.
    # Request URL(s) to POST new package file upload(s) to.
    # @param owner 
    # @param repo 
    # @param [Hash] opts the optional parameters
    # @option opts [FilesCreate] :data 
    # @return [Array<(PackageFileUpload, Fixnum, Hash)>] PackageFileUpload data, response status code and response headers
    def files_create_with_http_info(owner, repo, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FilesApi.files_create ..."
      end
      # verify the required parameter 'owner' is set
      if @api_client.config.client_side_validation && owner.nil?
        fail ArgumentError, "Missing the required parameter 'owner' when calling FilesApi.files_create"
      end
      # verify the required parameter 'repo' is set
      if @api_client.config.client_side_validation && repo.nil?
        fail ArgumentError, "Missing the required parameter 'repo' when calling FilesApi.files_create"
      end
      # resource path
      local_var_path = "/files/{owner}/{repo}/".sub('{' + 'owner' + '}', owner.to_s).sub('{' + 'repo' + '}', repo.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'data'])
      auth_names = ['apikey', 'csrf_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PackageFileUpload')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FilesApi#files_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Validate parameters used for create.
    # Validate parameters used for create.
    # @param owner 
    # @param repo 
    # @param [Hash] opts the optional parameters
    # @option opts [FilesValidate] :data 
    # @return [nil]
    def files_validate(owner, repo, opts = {})
      files_validate_with_http_info(owner, repo, opts)
      return nil
    end

    # Validate parameters used for create.
    # Validate parameters used for create.
    # @param owner 
    # @param repo 
    # @param [Hash] opts the optional parameters
    # @option opts [FilesValidate] :data 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def files_validate_with_http_info(owner, repo, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FilesApi.files_validate ..."
      end
      # verify the required parameter 'owner' is set
      if @api_client.config.client_side_validation && owner.nil?
        fail ArgumentError, "Missing the required parameter 'owner' when calling FilesApi.files_validate"
      end
      # verify the required parameter 'repo' is set
      if @api_client.config.client_side_validation && repo.nil?
        fail ArgumentError, "Missing the required parameter 'repo' when calling FilesApi.files_validate"
      end
      # resource path
      local_var_path = "/files/{owner}/{repo}/validate/".sub('{' + 'owner' + '}', owner.to_s).sub('{' + 'repo' + '}', repo.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'data'])
      auth_names = ['apikey', 'csrf_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FilesApi#files_validate\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
