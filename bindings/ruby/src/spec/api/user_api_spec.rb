=begin
#Cloudsmith API (v1)

#The API to the Cloudsmith Service

OpenAPI spec version: v1
Contact: support@cloudsmith.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudsmithApi::UserApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @instance = CloudsmithApi::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instance of UserApi' do
      expect(@instance).to be_instance_of(CloudsmithApi::UserApi)
    end
  end

  # unit tests for user_self
  # Provide a brief for the current user (if any).
  # Provide a brief for the current user (if any).
  # @param [Hash] opts the optional parameters
  # @return [UserBrief]
  describe 'user_self test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_token_create
  # Create or retrieve API token for a user.
  # Handles both: - Users authenticating with basic credentials to get a token - Two-factor authentication flow
  # @param [Hash] opts the optional parameters
  # @option opts [UserAuthTokenRequest] :data 
  # @return [UserAuthToken]
  describe 'user_token_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_tokens_create
  # Create an API key for the user that is currently authenticated.
  # Create an API key for the user that is currently authenticated.
  # @param [Hash] opts the optional parameters
  # @return [UserAuthenticationToken]
  describe 'user_tokens_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_tokens_list
  # Retrieve the API key assigned to the user that is currently authenticated.
  # Retrieve the API key assigned to the user that is currently authenticated.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [InlineResponse2001]
  describe 'user_tokens_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_tokens_refresh
  # Refresh the specified API key for the user that is currently authenticated.
  # Refresh the specified API key for the user that is currently authenticated.
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @return [UserAuthenticationToken]
  describe 'user_tokens_refresh test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
