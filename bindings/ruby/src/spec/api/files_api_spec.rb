=begin
#Cloudsmith API (v1)

#The API to the Cloudsmith Service

OpenAPI spec version: v1
Contact: support@cloudsmith.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudsmithApi::FilesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @instance = CloudsmithApi::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@instance).to be_instance_of(CloudsmithApi::FilesApi)
    end
  end

  # unit tests for files_abort
  # Abort a multipart file upload.
  # Abort a multipart file upload.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [PackageFileUploadRequest] :data 
  # @return [nil]
  describe 'files_abort test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_complete
  # Complete a multipart file upload.
  # Complete a multipart file upload.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [PackageFileUploadRequest] :data 
  # @return [PackageFileUpload]
  describe 'files_complete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_create
  # Request URL(s) to upload new package file upload(s) to.
  # Request URL(s) to upload new package file upload(s) to.
  # @param owner 
  # @param repo 
  # @param [Hash] opts the optional parameters
  # @option opts [PackageFileUploadRequest] :data 
  # @return [PackageFileUpload]
  describe 'files_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_info
  # Get upload information to perform a multipart file upload.
  # Get upload information to perform a multipart file upload.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param filename The filename of the file being uploaded
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :part_number The part number to be uploaded next
  # @return [PackageFilePartsUpload]
  describe 'files_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_validate
  # Validate parameters used for create.
  # Validate parameters used for create.
  # @param owner 
  # @param repo 
  # @param [Hash] opts the optional parameters
  # @option opts [PackageFileUploadRequest] :data 
  # @return [nil]
  describe 'files_validate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
