=begin
#Cloudsmith API (v1)

#The API to the Cloudsmith Service

OpenAPI spec version: v1
Contact: support@cloudsmith.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.26

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudsmithApi::OrgsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrgsApi' do
  before do
    # run before each test
    @instance = CloudsmithApi::OrgsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrgsApi' do
    it 'should create an instance of OrgsApi' do
      expect(@instance).to be_instance_of(CloudsmithApi::OrgsApi)
    end
  end

  # unit tests for orgs_invites_create
  # Create an organization invite for a specific user
  # Create an organization invite for a specific user
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationInviteRequest] :data 
  # @return [OrganizationInvite]
  describe 'orgs_invites_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_invites_delete
  # Delete a specific organization invite
  # Delete a specific organization invite
  # @param org 
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_invites_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_invites_extend
  # Extend an organization invite.
  # Extend an organization invite.
  # @param org 
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationInviteExtend]
  describe 'orgs_invites_extend test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_invites_list
  # Get a list of all invites for an organization.
  # Get a list of all invites for an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<OrganizationInvite>]
  describe 'orgs_invites_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_invites_partial_update
  # Update a specific organization invite.
  # Update a specific organization invite.
  # @param org 
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationInviteUpdateRequestPatch] :data 
  # @return [OrganizationInvite]
  describe 'orgs_invites_partial_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_invites_resend
  # Resend an organization invite.
  # Resend an organization invite.
  # @param org 
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationInviteExtend]
  describe 'orgs_invites_resend test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list
  # Get a list of all the organizations you are associated with.
  # Get a list of all the organizations you are associated with.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<Organization>]
  describe 'orgs_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_members_delete
  # Removes a member from the organization.
  # Removes a member from the organization.
  # @param org 
  # @param member 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_members_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_members_list
  # Get the details for all organization members.
  # Get the details for all organization members.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<OrganizationMembership>]
  describe 'orgs_members_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_members_read
  # Get the details for a specific organization member.
  # Get the details for a specific organization member.
  # @param org 
  # @param member 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationMembership]
  describe 'orgs_members_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_members_remove
  # Removes a member from the organization (deprecated, use DELETE instead).
  # Removes a member from the organization (deprecated, use DELETE instead).
  # @param org 
  # @param member 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_members_remove test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_read
  # Get the details for the specific organization.
  # Get the details for the specific organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'orgs_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_saml_group_sync_create
  # Create a new SAML Group Sync mapping within an organization.
  # Create a new SAML Group Sync mapping within an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationGroupSyncRequest] :data 
  # @return [OrganizationGroupSync]
  describe 'orgs_saml_group_sync_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_saml_group_sync_delete
  # Delete a SAML Group Sync mapping from an organization.
  # Delete a SAML Group Sync mapping from an organization.
  # @param org 
  # @param slug_perm 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_saml_group_sync_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_saml_group_sync_list
  # Get the details of all SAML Group Sync mapping within an organization.
  # Get the details of all SAML Group Sync mapping within an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<OrganizationGroupSync>]
  describe 'orgs_saml_group_sync_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_create
  # Create a service within an organization.
  # Create a service within an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [ServiceRequest] :data 
  # @return [Service]
  describe 'orgs_services_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_delete
  # Delete a specific service
  # Delete a specific service
  # @param org 
  # @param service 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_services_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_list
  # Get a list of all services within an organization.
  # Get a list of all services within an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<Service>]
  describe 'orgs_services_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_partial_update
  # Update a service within an organization.
  # Update a service within an organization.
  # @param org 
  # @param service 
  # @param [Hash] opts the optional parameters
  # @option opts [ServiceRequestPatch] :data 
  # @return [Service]
  describe 'orgs_services_partial_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_read
  # Retrieve details of a single service within an organization.
  # Retrieve details of a single service within an organization.
  # @param org 
  # @param service 
  # @param [Hash] opts the optional parameters
  # @return [Service]
  describe 'orgs_services_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_services_refresh
  # Refresh service API token.
  # Refresh service API token.
  # @param org 
  # @param service 
  # @param [Hash] opts the optional parameters
  # @return [Service]
  describe 'orgs_services_refresh test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_create
  # Create a team for this organization.
  # Create a team for this organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationTeamRequest] :data 
  # @return [OrganizationTeam]
  describe 'orgs_teams_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_delete
  # Delete a specific team in a organization.
  # Delete a specific team in a organization.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_teams_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_list
  # Get the details of all teams within an organization.
  # Get the details of all teams within an organization.
  # @param org 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [Array<OrganizationTeam>]
  describe 'orgs_teams_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_members_create
  # Add users to a team.
  # Add users to a team.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationTeamMembers] :data 
  # @return [OrganizationTeamMembers]
  describe 'orgs_teams_members_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_members_list
  # List all members for the team.
  # List all members for the team.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationTeamMembers]
  describe 'orgs_teams_members_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_members_update
  # Replace all team members.
  # Replace all team members.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationTeamMembers]
  describe 'orgs_teams_members_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_partial_update
  # Update a specific team in a organization.
  # Update a specific team in a organization.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationTeamRequestPatch] :data 
  # @return [OrganizationTeam]
  describe 'orgs_teams_partial_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_teams_read
  # Get the details of a specific team within an organization.
  # Get the details of a specific team within an organization.
  # @param org 
  # @param team 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationTeam]
  describe 'orgs_teams_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
