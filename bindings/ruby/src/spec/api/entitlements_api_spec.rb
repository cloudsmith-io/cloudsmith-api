=begin
#Cloudsmith API (v1)

#The API to the Cloudsmith Service

OpenAPI spec version: v1
Contact: support@cloudsmith.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudsmithApi::EntitlementsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EntitlementsApi' do
  before do
    # run before each test
    @instance = CloudsmithApi::EntitlementsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EntitlementsApi' do
    it 'should create an instance of EntitlementsApi' do
      expect(@instance).to be_instance_of(CloudsmithApi::EntitlementsApi)
    end
  end

  # unit tests for entitlements_create
  # Create a specific entitlement in a repository.
  # Create a specific entitlement in a repository.
  # @param owner 
  # @param repo 
  # @param [Hash] opts the optional parameters
  # @option opts [RepositoryTokenRequest] :data 
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [RepositoryToken]
  describe 'entitlements_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_delete
  # Delete a specific entitlement in a repository.
  # Delete a specific entitlement in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'entitlements_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_disable
  # Disable an entitlement token in a repository.
  # Disable an entitlement token in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'entitlements_disable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_enable
  # Enable an entitlement token in a repository.
  # Enable an entitlement token in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'entitlements_enable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_list
  # Get a list of all entitlements in a repository.
  # Get a list of all entitlements in a repository.
  # @param owner 
  # @param repo 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A page number within the paginated result set.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @option opts [String] :query A search term for querying names of entitlements.
  # @option opts [BOOLEAN] :active If true, only include active tokens
  # @option opts [String] :sort A field for sorting objects in ascending or descending order. Use &#x60;-&#x60; prefix for descending order (e.g., &#x60;-name&#x60;). Available options: name.
  # @return [Array<RepositoryToken>]
  describe 'entitlements_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_partial_update
  # Update a specific entitlement in a repository.
  # Update a specific entitlement in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [RepositoryTokenRequestPatch] :data 
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [RepositoryToken]
  describe 'entitlements_partial_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_read
  # Get a specific entitlement in a repository.
  # Get a specific entitlement in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :fuzzy If true, entitlement identifiers including name will be fuzzy matched.
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [RepositoryToken]
  describe 'entitlements_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_refresh
  # Refresh an entitlement token in a repository.
  # Refresh an entitlement token in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [RepositoryTokenRefreshRequest] :data 
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [RepositoryTokenRefresh]
  describe 'entitlements_refresh test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_reset
  # Reset the statistics for an entitlement token in a repository.
  # Reset the statistics for an entitlement token in a repository.
  # @param owner 
  # @param repo 
  # @param identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [nil]
  describe 'entitlements_reset test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for entitlements_sync
  # Synchronise tokens from a source repository.
  # Synchronise tokens from a source repository.
  # @param owner 
  # @param repo 
  # @param [Hash] opts the optional parameters
  # @option opts [RepositoryTokenSyncRequest] :data 
  # @option opts [BOOLEAN] :show_tokens Show entitlement token strings in results
  # @return [RepositoryTokenSync]
  describe 'entitlements_sync test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
