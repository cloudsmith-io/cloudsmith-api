/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.cloudsmith.api.models.CommonDownloadsMetricsValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * CommonDownloadsMetrics
 */

public class CommonDownloadsMetrics implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("average")
  private CommonDownloadsMetricsValue average = null;

  @SerializedName("highest")
  private CommonDownloadsMetricsValue highest = null;

  @SerializedName("lowest")
  private CommonDownloadsMetricsValue lowest = null;

  @SerializedName("total")
  private CommonDownloadsMetricsValue total = null;

  public CommonDownloadsMetrics average(CommonDownloadsMetricsValue average) {
    this.average = average;
    return this;
  }

   /**
   * Get average
   * @return average
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public CommonDownloadsMetricsValue getAverage() {
    return average;
  }

  public void setAverage(CommonDownloadsMetricsValue average) {
    this.average = average;
  }

  public CommonDownloadsMetrics highest(CommonDownloadsMetricsValue highest) {
    this.highest = highest;
    return this;
  }

   /**
   * Get highest
   * @return highest
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public CommonDownloadsMetricsValue getHighest() {
    return highest;
  }

  public void setHighest(CommonDownloadsMetricsValue highest) {
    this.highest = highest;
  }

  public CommonDownloadsMetrics lowest(CommonDownloadsMetricsValue lowest) {
    this.lowest = lowest;
    return this;
  }

   /**
   * Get lowest
   * @return lowest
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public CommonDownloadsMetricsValue getLowest() {
    return lowest;
  }

  public void setLowest(CommonDownloadsMetricsValue lowest) {
    this.lowest = lowest;
  }

  public CommonDownloadsMetrics total(CommonDownloadsMetricsValue total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public CommonDownloadsMetricsValue getTotal() {
    return total;
  }

  public void setTotal(CommonDownloadsMetricsValue total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonDownloadsMetrics commonDownloadsMetrics = (CommonDownloadsMetrics) o;
    return Objects.equals(this.average, commonDownloadsMetrics.average) &&
        Objects.equals(this.highest, commonDownloadsMetrics.highest) &&
        Objects.equals(this.lowest, commonDownloadsMetrics.lowest) &&
        Objects.equals(this.total, commonDownloadsMetrics.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(average, highest, lowest, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonDownloadsMetrics {\n");
    
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    highest: ").append(toIndentedString(highest)).append("\n");
    sb.append("    lowest: ").append(toIndentedString(lowest)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

