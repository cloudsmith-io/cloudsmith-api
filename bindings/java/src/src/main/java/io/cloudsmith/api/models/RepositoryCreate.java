/*
 * Cloudsmith API
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.cloudsmith.api.models.ReposGpgKeys;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * RepositoryCreate
 */

public class RepositoryCreate implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("cdn_url")
  private String cdnUrl = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("deleted_at")
  private String deletedAt = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("gpg_keys")
  private List<ReposGpgKeys> gpgKeys = null;

  @SerializedName("index_files")
  private Boolean indexFiles = null;

  @SerializedName("is_open_source")
  private Boolean isOpenSource = null;

  @SerializedName("is_private")
  private Boolean isPrivate = null;

  @SerializedName("is_public")
  private Boolean isPublic = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("namespace_url")
  private String namespaceUrl = null;

  @SerializedName("num_downloads")
  private Integer numDownloads = null;

  @SerializedName("package_count")
  private Integer packageCount = null;

  @SerializedName("package_group_count")
  private Integer packageGroupCount = null;

  @SerializedName("repository_type")
  private Integer repositoryType = null;

  @SerializedName("repository_type_str")
  private String repositoryTypeStr = null;

  @SerializedName("self_html_url")
  private String selfHtmlUrl = null;

  @SerializedName("self_url")
  private String selfUrl = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("size_str")
  private String sizeStr = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("slug_perm")
  private String slugPerm = null;

  @SerializedName("storage_region")
  private String storageRegion = null;

  public RepositoryCreate cdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
    return this;
  }

   /**
   * Base URL from which packages and other artifacts are downloaded.
   * @return cdnUrl
  **/
  @ApiModelProperty(value = "Base URL from which packages and other artifacts are downloaded.")
  public String getCdnUrl() {
    return cdnUrl;
  }

  public void setCdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
  }

  public RepositoryCreate createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * 
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public RepositoryCreate deletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * 
   * @return deletedAt
  **/
  @ApiModelProperty(value = "")
  public String getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }

  public RepositoryCreate description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the repository&#39;s purpose/contents.
   * @return description
  **/
  @ApiModelProperty(value = "A description of the repository's purpose/contents.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RepositoryCreate gpgKeys(List<ReposGpgKeys> gpgKeys) {
    this.gpgKeys = gpgKeys;
    return this;
  }

  public RepositoryCreate addGpgKeysItem(ReposGpgKeys gpgKeysItem) {
    if (this.gpgKeys == null) {
      this.gpgKeys = new ArrayList<>();
    }
    this.gpgKeys.add(gpgKeysItem);
    return this;
  }

   /**
   * 
   * @return gpgKeys
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<ReposGpgKeys> getGpgKeys() {
    return gpgKeys;
  }

  public void setGpgKeys(List<ReposGpgKeys> gpgKeys) {
    this.gpgKeys = gpgKeys;
  }

  public RepositoryCreate indexFiles(Boolean indexFiles) {
    this.indexFiles = indexFiles;
    return this;
  }

   /**
   * If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.
   * @return indexFiles
  **/
  @ApiModelProperty(value = "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.")
  public Boolean isIndexFiles() {
    return indexFiles;
  }

  public void setIndexFiles(Boolean indexFiles) {
    this.indexFiles = indexFiles;
  }

  public RepositoryCreate isOpenSource(Boolean isOpenSource) {
    this.isOpenSource = isOpenSource;
    return this;
  }

   /**
   * 
   * @return isOpenSource
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsOpenSource() {
    return isOpenSource;
  }

  public void setIsOpenSource(Boolean isOpenSource) {
    this.isOpenSource = isOpenSource;
  }

  public RepositoryCreate isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * 
   * @return isPrivate
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  public RepositoryCreate isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * 
   * @return isPublic
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public RepositoryCreate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A descriptive name for the repository.
   * @return name
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "A descriptive name for the repository.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RepositoryCreate namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace to which this repository belongs.
   * @return namespace
  **/
  @ApiModelProperty(value = "Namespace to which this repository belongs.")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public RepositoryCreate namespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
    return this;
  }

   /**
   * API endpoint where data about this namespace can be retrieved.
   * @return namespaceUrl
  **/
  @ApiModelProperty(value = "API endpoint where data about this namespace can be retrieved.")
  public String getNamespaceUrl() {
    return namespaceUrl;
  }

  public void setNamespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
  }

  public RepositoryCreate numDownloads(Integer numDownloads) {
    this.numDownloads = numDownloads;
    return this;
  }

   /**
   * The number of downloads for packages in the repository.
   * @return numDownloads
  **/
  @ApiModelProperty(value = "The number of downloads for packages in the repository.")
  public Integer getNumDownloads() {
    return numDownloads;
  }

  public void setNumDownloads(Integer numDownloads) {
    this.numDownloads = numDownloads;
  }

  public RepositoryCreate packageCount(Integer packageCount) {
    this.packageCount = packageCount;
    return this;
  }

   /**
   * The number of packages in the repository.
   * @return packageCount
  **/
  @ApiModelProperty(value = "The number of packages in the repository.")
  public Integer getPackageCount() {
    return packageCount;
  }

  public void setPackageCount(Integer packageCount) {
    this.packageCount = packageCount;
  }

  public RepositoryCreate packageGroupCount(Integer packageGroupCount) {
    this.packageGroupCount = packageGroupCount;
    return this;
  }

   /**
   * The number of groups in the repository.
   * @return packageGroupCount
  **/
  @ApiModelProperty(value = "The number of groups in the repository.")
  public Integer getPackageGroupCount() {
    return packageGroupCount;
  }

  public void setPackageGroupCount(Integer packageGroupCount) {
    this.packageGroupCount = packageGroupCount;
  }

  public RepositoryCreate repositoryType(Integer repositoryType) {
    this.repositoryType = repositoryType;
    return this;
  }

   /**
   * The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.
   * @return repositoryType
  **/
  @ApiModelProperty(value = "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.")
  public Integer getRepositoryType() {
    return repositoryType;
  }

  public void setRepositoryType(Integer repositoryType) {
    this.repositoryType = repositoryType;
  }

  public RepositoryCreate repositoryTypeStr(String repositoryTypeStr) {
    this.repositoryTypeStr = repositoryTypeStr;
    return this;
  }

   /**
   *          The repository type changes how it is accessed and billed.         Private repositories can only be used on paid plans, but are visible         only to you or authorised delegates. Public repositories are free to         use on all plans and visible to all Cloudsmith users.         
   * @return repositoryTypeStr
  **/
  @ApiModelProperty(value = "         The repository type changes how it is accessed and billed.         Private repositories can only be used on paid plans, but are visible         only to you or authorised delegates. Public repositories are free to         use on all plans and visible to all Cloudsmith users.         ")
  public String getRepositoryTypeStr() {
    return repositoryTypeStr;
  }

  public void setRepositoryTypeStr(String repositoryTypeStr) {
    this.repositoryTypeStr = repositoryTypeStr;
  }

  public RepositoryCreate selfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
    return this;
  }

   /**
   * Website URL for this repository.
   * @return selfHtmlUrl
  **/
  @ApiModelProperty(value = "Website URL for this repository.")
  public String getSelfHtmlUrl() {
    return selfHtmlUrl;
  }

  public void setSelfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
  }

  public RepositoryCreate selfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
    return this;
  }

   /**
   * API endpoint where data about this repository can be retrieved.
   * @return selfUrl
  **/
  @ApiModelProperty(value = "API endpoint where data about this repository can be retrieved.")
  public String getSelfUrl() {
    return selfUrl;
  }

  public void setSelfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
  }

  public RepositoryCreate size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * The calculated size of the repository.
   * @return size
  **/
  @ApiModelProperty(value = "The calculated size of the repository.")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public RepositoryCreate sizeStr(String sizeStr) {
    this.sizeStr = sizeStr;
    return this;
  }

   /**
   * The calculated size of the repository (human readable).
   * @return sizeStr
  **/
  @ApiModelProperty(value = "The calculated size of the repository (human readable).")
  public String getSizeStr() {
    return sizeStr;
  }

  public void setSizeStr(String sizeStr) {
    this.sizeStr = sizeStr;
  }

  public RepositoryCreate slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * The slug identifies the repository in URIs.
   * @return slug
  **/
  @ApiModelProperty(value = "The slug identifies the repository in URIs.")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public RepositoryCreate slugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
    return this;
  }

   /**
   * The slug_perm immutably identifies the repository. It will never change once a repository has been created.
   * @return slugPerm
  **/
  @ApiModelProperty(value = "The slug_perm immutably identifies the repository. It will never change once a repository has been created.")
  public String getSlugPerm() {
    return slugPerm;
  }

  public void setSlugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
  }

  public RepositoryCreate storageRegion(String storageRegion) {
    this.storageRegion = storageRegion;
    return this;
  }

   /**
   * The Cloudsmith region in which package files are stored.
   * @return storageRegion
  **/
  @ApiModelProperty(value = "The Cloudsmith region in which package files are stored.")
  public String getStorageRegion() {
    return storageRegion;
  }

  public void setStorageRegion(String storageRegion) {
    this.storageRegion = storageRegion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepositoryCreate repositoryCreate = (RepositoryCreate) o;
    return Objects.equals(this.cdnUrl, repositoryCreate.cdnUrl) &&
        Objects.equals(this.createdAt, repositoryCreate.createdAt) &&
        Objects.equals(this.deletedAt, repositoryCreate.deletedAt) &&
        Objects.equals(this.description, repositoryCreate.description) &&
        Objects.equals(this.gpgKeys, repositoryCreate.gpgKeys) &&
        Objects.equals(this.indexFiles, repositoryCreate.indexFiles) &&
        Objects.equals(this.isOpenSource, repositoryCreate.isOpenSource) &&
        Objects.equals(this.isPrivate, repositoryCreate.isPrivate) &&
        Objects.equals(this.isPublic, repositoryCreate.isPublic) &&
        Objects.equals(this.name, repositoryCreate.name) &&
        Objects.equals(this.namespace, repositoryCreate.namespace) &&
        Objects.equals(this.namespaceUrl, repositoryCreate.namespaceUrl) &&
        Objects.equals(this.numDownloads, repositoryCreate.numDownloads) &&
        Objects.equals(this.packageCount, repositoryCreate.packageCount) &&
        Objects.equals(this.packageGroupCount, repositoryCreate.packageGroupCount) &&
        Objects.equals(this.repositoryType, repositoryCreate.repositoryType) &&
        Objects.equals(this.repositoryTypeStr, repositoryCreate.repositoryTypeStr) &&
        Objects.equals(this.selfHtmlUrl, repositoryCreate.selfHtmlUrl) &&
        Objects.equals(this.selfUrl, repositoryCreate.selfUrl) &&
        Objects.equals(this.size, repositoryCreate.size) &&
        Objects.equals(this.sizeStr, repositoryCreate.sizeStr) &&
        Objects.equals(this.slug, repositoryCreate.slug) &&
        Objects.equals(this.slugPerm, repositoryCreate.slugPerm) &&
        Objects.equals(this.storageRegion, repositoryCreate.storageRegion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cdnUrl, createdAt, deletedAt, description, gpgKeys, indexFiles, isOpenSource, isPrivate, isPublic, name, namespace, namespaceUrl, numDownloads, packageCount, packageGroupCount, repositoryType, repositoryTypeStr, selfHtmlUrl, selfUrl, size, sizeStr, slug, slugPerm, storageRegion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepositoryCreate {\n");
    
    sb.append("    cdnUrl: ").append(toIndentedString(cdnUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gpgKeys: ").append(toIndentedString(gpgKeys)).append("\n");
    sb.append("    indexFiles: ").append(toIndentedString(indexFiles)).append("\n");
    sb.append("    isOpenSource: ").append(toIndentedString(isOpenSource)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    namespaceUrl: ").append(toIndentedString(namespaceUrl)).append("\n");
    sb.append("    numDownloads: ").append(toIndentedString(numDownloads)).append("\n");
    sb.append("    packageCount: ").append(toIndentedString(packageCount)).append("\n");
    sb.append("    packageGroupCount: ").append(toIndentedString(packageGroupCount)).append("\n");
    sb.append("    repositoryType: ").append(toIndentedString(repositoryType)).append("\n");
    sb.append("    repositoryTypeStr: ").append(toIndentedString(repositoryTypeStr)).append("\n");
    sb.append("    selfHtmlUrl: ").append(toIndentedString(selfHtmlUrl)).append("\n");
    sb.append("    selfUrl: ").append(toIndentedString(selfUrl)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sizeStr: ").append(toIndentedString(sizeStr)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    slugPerm: ").append(toIndentedString(slugPerm)).append("\n");
    sb.append("    storageRegion: ").append(toIndentedString(storageRegion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

