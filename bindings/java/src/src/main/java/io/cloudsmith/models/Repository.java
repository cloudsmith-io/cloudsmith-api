/*
 * Cloudsmith API
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Repository
 */

public class Repository implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("cdn_url")
  private String cdnUrl = null;

  @SerializedName("self_url")
  private String selfUrl = null;

  @SerializedName("repository_type_str")
  private String repositoryTypeStr = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("gpg_fingerprint")
  private String gpgFingerprint = null;

  @SerializedName("index_files")
  private Boolean indexFiles = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("is_open_source")
  private Boolean isOpenSource = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("self_html_url")
  private String selfHtmlUrl = null;

  @SerializedName("gpg_public_key")
  private String gpgPublicKey = null;

  @SerializedName("namespace_url")
  private String namespaceUrl = null;

  @SerializedName("slug_perm")
  private String slugPerm = null;

  @SerializedName("is_public")
  private Boolean isPublic = null;

  @SerializedName("deleted_at")
  private String deletedAt = null;

  @SerializedName("repository_type")
  private String repositoryType = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("is_private")
  private Boolean isPrivate = null;

  @SerializedName("size")
  private Integer size = null;

  public Repository cdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
    return this;
  }

   /**
   * 
   * @return cdnUrl
  **/
  @ApiModelProperty(value = "")
  public String getCdnUrl() {
    return cdnUrl;
  }

  public void setCdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
  }

  public Repository selfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
    return this;
  }

   /**
   * 
   * @return selfUrl
  **/
  @ApiModelProperty(value = "")
  public String getSelfUrl() {
    return selfUrl;
  }

  public void setSelfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
  }

  public Repository repositoryTypeStr(String repositoryTypeStr) {
    this.repositoryTypeStr = repositoryTypeStr;
    return this;
  }

   /**
   * 
   * @return repositoryTypeStr
  **/
  @ApiModelProperty(value = "")
  public String getRepositoryTypeStr() {
    return repositoryTypeStr;
  }

  public void setRepositoryTypeStr(String repositoryTypeStr) {
    this.repositoryTypeStr = repositoryTypeStr;
  }

  public Repository description(String description) {
    this.description = description;
    return this;
  }

   /**
   * 
   * @return description
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Repository gpgFingerprint(String gpgFingerprint) {
    this.gpgFingerprint = gpgFingerprint;
    return this;
  }

   /**
   * The identifier used by GPG for this key.
   * @return gpgFingerprint
  **/
  @ApiModelProperty(value = "The identifier used by GPG for this key.")
  public String getGpgFingerprint() {
    return gpgFingerprint;
  }

  public void setGpgFingerprint(String gpgFingerprint) {
    this.gpgFingerprint = gpgFingerprint;
  }

  public Repository indexFiles(Boolean indexFiles) {
    this.indexFiles = indexFiles;
    return this;
  }

   /**
   * If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.
   * @return indexFiles
  **/
  @ApiModelProperty(value = "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.")
  public Boolean getIndexFiles() {
    return indexFiles;
  }

  public void setIndexFiles(Boolean indexFiles) {
    this.indexFiles = indexFiles;
  }

  public Repository name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A descriptive name for the repository.
   * @return name
  **/
  @ApiModelProperty(value = "A descriptive name for the repository.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Repository createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * 
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Repository isOpenSource(Boolean isOpenSource) {
    this.isOpenSource = isOpenSource;
    return this;
  }

   /**
   * 
   * @return isOpenSource
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsOpenSource() {
    return isOpenSource;
  }

  public void setIsOpenSource(Boolean isOpenSource) {
    this.isOpenSource = isOpenSource;
  }

  public Repository namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * 
   * @return namespace
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public Repository selfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
    return this;
  }

   /**
   * 
   * @return selfHtmlUrl
  **/
  @ApiModelProperty(value = "")
  public String getSelfHtmlUrl() {
    return selfHtmlUrl;
  }

  public void setSelfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
  }

  public Repository gpgPublicKey(String gpgPublicKey) {
    this.gpgPublicKey = gpgPublicKey;
    return this;
  }

   /**
   * The public key given to repo users.
   * @return gpgPublicKey
  **/
  @ApiModelProperty(value = "The public key given to repo users.")
  public String getGpgPublicKey() {
    return gpgPublicKey;
  }

  public void setGpgPublicKey(String gpgPublicKey) {
    this.gpgPublicKey = gpgPublicKey;
  }

  public Repository namespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
    return this;
  }

   /**
   * 
   * @return namespaceUrl
  **/
  @ApiModelProperty(value = "")
  public String getNamespaceUrl() {
    return namespaceUrl;
  }

  public void setNamespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
  }

  public Repository slugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
    return this;
  }

   /**
   * 
   * @return slugPerm
  **/
  @ApiModelProperty(value = "")
  public String getSlugPerm() {
    return slugPerm;
  }

  public void setSlugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
  }

  public Repository isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * 
   * @return isPublic
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public Repository deletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * 
   * @return deletedAt
  **/
  @ApiModelProperty(value = "")
  public String getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }

  public Repository repositoryType(String repositoryType) {
    this.repositoryType = repositoryType;
    return this;
  }

   /**
   * The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.
   * @return repositoryType
  **/
  @ApiModelProperty(value = "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.")
  public String getRepositoryType() {
    return repositoryType;
  }

  public void setRepositoryType(String repositoryType) {
    this.repositoryType = repositoryType;
  }

  public Repository slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * The slug identifies the repository in URIs.
   * @return slug
  **/
  @ApiModelProperty(value = "The slug identifies the repository in URIs.")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public Repository isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * 
   * @return isPrivate
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  public Repository size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * The calculated size of the repository.
   * @return size
  **/
  @ApiModelProperty(value = "The calculated size of the repository.")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Repository repository = (Repository) o;
    return Objects.equals(this.cdnUrl, repository.cdnUrl) &&
        Objects.equals(this.selfUrl, repository.selfUrl) &&
        Objects.equals(this.repositoryTypeStr, repository.repositoryTypeStr) &&
        Objects.equals(this.description, repository.description) &&
        Objects.equals(this.gpgFingerprint, repository.gpgFingerprint) &&
        Objects.equals(this.indexFiles, repository.indexFiles) &&
        Objects.equals(this.name, repository.name) &&
        Objects.equals(this.createdAt, repository.createdAt) &&
        Objects.equals(this.isOpenSource, repository.isOpenSource) &&
        Objects.equals(this.namespace, repository.namespace) &&
        Objects.equals(this.selfHtmlUrl, repository.selfHtmlUrl) &&
        Objects.equals(this.gpgPublicKey, repository.gpgPublicKey) &&
        Objects.equals(this.namespaceUrl, repository.namespaceUrl) &&
        Objects.equals(this.slugPerm, repository.slugPerm) &&
        Objects.equals(this.isPublic, repository.isPublic) &&
        Objects.equals(this.deletedAt, repository.deletedAt) &&
        Objects.equals(this.repositoryType, repository.repositoryType) &&
        Objects.equals(this.slug, repository.slug) &&
        Objects.equals(this.isPrivate, repository.isPrivate) &&
        Objects.equals(this.size, repository.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cdnUrl, selfUrl, repositoryTypeStr, description, gpgFingerprint, indexFiles, name, createdAt, isOpenSource, namespace, selfHtmlUrl, gpgPublicKey, namespaceUrl, slugPerm, isPublic, deletedAt, repositoryType, slug, isPrivate, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Repository {\n");
    
    sb.append("    cdnUrl: ").append(toIndentedString(cdnUrl)).append("\n");
    sb.append("    selfUrl: ").append(toIndentedString(selfUrl)).append("\n");
    sb.append("    repositoryTypeStr: ").append(toIndentedString(repositoryTypeStr)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gpgFingerprint: ").append(toIndentedString(gpgFingerprint)).append("\n");
    sb.append("    indexFiles: ").append(toIndentedString(indexFiles)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    isOpenSource: ").append(toIndentedString(isOpenSource)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    selfHtmlUrl: ").append(toIndentedString(selfHtmlUrl)).append("\n");
    sb.append("    gpgPublicKey: ").append(toIndentedString(gpgPublicKey)).append("\n");
    sb.append("    namespaceUrl: ").append(toIndentedString(namespaceUrl)).append("\n");
    sb.append("    slugPerm: ").append(toIndentedString(slugPerm)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    repositoryType: ").append(toIndentedString(repositoryType)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

