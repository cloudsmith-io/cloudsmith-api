/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * OrganizationInviteExtendResponse
 */

public class OrganizationInviteExtendResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("email")
  private String email = null;

  @SerializedName("expires_at")
  private OffsetDateTime expiresAt = null;

  @SerializedName("inviter")
  private String inviter = null;

  @SerializedName("inviter_url")
  private String inviterUrl = null;

  @SerializedName("org")
  private String org = null;

  @SerializedName("role")
  private String role = "Member";

  @SerializedName("slug_perm")
  private String slugPerm = null;

  @SerializedName("user")
  private String user = null;

  @SerializedName("user_url")
  private String userUrl = null;

  public OrganizationInviteExtendResponse email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email of the user to be invited.
   * @return email
  **/
 @Size(min=1)  @ApiModelProperty(value = "The email of the user to be invited.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @Valid
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

   /**
   * Get inviter
   * @return inviter
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getInviter() {
    return inviter;
  }

   /**
   * Get inviterUrl
   * @return inviterUrl
  **/
  @ApiModelProperty(value = "")
  public String getInviterUrl() {
    return inviterUrl;
  }

   /**
   * Get org
   * @return org
  **/
  @ApiModelProperty(value = "")
  public String getOrg() {
    return org;
  }

  public OrganizationInviteExtendResponse role(String role) {
    this.role = role;
    return this;
  }

   /**
   * The role to be assigned to the invited user.
   * @return role
  **/
  @ApiModelProperty(value = "The role to be assigned to the invited user.")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

   /**
   * The slug_perm of the invite to be extended.
   * @return slugPerm
  **/
 @Pattern(regexp="^[-a-zA-Z0-9_]+$") @Size(min=1)  @ApiModelProperty(value = "The slug_perm of the invite to be extended.")
  public String getSlugPerm() {
    return slugPerm;
  }

  public OrganizationInviteExtendResponse user(String user) {
    this.user = user;
    return this;
  }

   /**
   * The slug of the user to be invited.
   * @return user
  **/
 @Size(min=1)  @ApiModelProperty(value = "The slug of the user to be invited.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

   /**
   * Get userUrl
   * @return userUrl
  **/
  @ApiModelProperty(value = "")
  public String getUserUrl() {
    return userUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationInviteExtendResponse organizationInviteExtendResponse = (OrganizationInviteExtendResponse) o;
    return Objects.equals(this.email, organizationInviteExtendResponse.email) &&
        Objects.equals(this.expiresAt, organizationInviteExtendResponse.expiresAt) &&
        Objects.equals(this.inviter, organizationInviteExtendResponse.inviter) &&
        Objects.equals(this.inviterUrl, organizationInviteExtendResponse.inviterUrl) &&
        Objects.equals(this.org, organizationInviteExtendResponse.org) &&
        Objects.equals(this.role, organizationInviteExtendResponse.role) &&
        Objects.equals(this.slugPerm, organizationInviteExtendResponse.slugPerm) &&
        Objects.equals(this.user, organizationInviteExtendResponse.user) &&
        Objects.equals(this.userUrl, organizationInviteExtendResponse.userUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, expiresAt, inviter, inviterUrl, org, role, slugPerm, user, userUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationInviteExtendResponse {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    inviter: ").append(toIndentedString(inviter)).append("\n");
    sb.append("    inviterUrl: ").append(toIndentedString(inviterUrl)).append("\n");
    sb.append("    org: ").append(toIndentedString(org)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    slugPerm: ").append(toIndentedString(slugPerm)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userUrl: ").append(toIndentedString(userUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

