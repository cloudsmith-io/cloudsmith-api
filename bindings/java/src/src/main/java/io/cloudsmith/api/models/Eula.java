/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Eula
 */

public class Eula implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("number")
  private Integer number = null;

  public Eula identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * A unique identifier that you can use for your own EULA tracking purposes. This might be a date, or a semantic version, etc. The only requirement is that it is unique across multiple EULAs.
   * @return identifier
  **/
 @Pattern(regexp="^[-a-zA-Z0-9_]+$") @Size(max=16)  @ApiModelProperty(value = "A unique identifier that you can use for your own EULA tracking purposes. This might be a date, or a semantic version, etc. The only requirement is that it is unique across multiple EULAs.")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public Eula number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * A sequential identifier that increments by one for each new commit in a repository.
   * minimum: 0
   * maximum: 2147483647
   * @return number
  **/
  @NotNull
 @Min(0) @Max(2147483647)  @ApiModelProperty(required = true, value = "A sequential identifier that increments by one for each new commit in a repository.")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Eula eula = (Eula) o;
    return Objects.equals(this.identifier, eula.identifier) &&
        Objects.equals(this.number, eula.number);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, number);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Eula {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

