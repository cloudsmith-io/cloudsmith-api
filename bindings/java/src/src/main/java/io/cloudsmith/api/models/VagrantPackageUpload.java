/*
 * Cloudsmith API
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.cloudsmith.api.models.PackagesownerrepoArchitectures;
import io.cloudsmith.api.models.PackagesownerrepoFiles;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * VagrantPackageUpload
 */

public class VagrantPackageUpload implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("architectures")
  private List<PackagesownerrepoArchitectures> architectures = null;

  @SerializedName("cdn_url")
  private String cdnUrl = null;

  @SerializedName("checksum_md5")
  private String checksumMd5 = null;

  @SerializedName("checksum_sha1")
  private String checksumSha1 = null;

  @SerializedName("checksum_sha256")
  private String checksumSha256 = null;

  @SerializedName("checksum_sha512")
  private String checksumSha512 = null;

  @SerializedName("dependencies_checksum_md5")
  private String dependenciesChecksumMd5 = null;

  @SerializedName("dependencies_url")
  private String dependenciesUrl = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("distro")
  private Object distro = null;

  @SerializedName("distro_version")
  private Object distroVersion = null;

  @SerializedName("downloads")
  private Integer downloads = null;

  @SerializedName("epoch")
  private Integer epoch = null;

  @SerializedName("extension")
  private String extension = null;

  @SerializedName("filename")
  private String filename = null;

  @SerializedName("files")
  private List<PackagesownerrepoFiles> files = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("format_url")
  private String formatUrl = null;

  @SerializedName("identifier_perm")
  private String identifierPerm = null;

  @SerializedName("indexed")
  private Boolean indexed = null;

  @SerializedName("is_downloadable")
  private Boolean isDownloadable = null;

  @SerializedName("is_quarantined")
  private Boolean isQuarantined = null;

  @SerializedName("is_sync_awaiting")
  private Boolean isSyncAwaiting = null;

  @SerializedName("is_sync_completed")
  private Boolean isSyncCompleted = null;

  @SerializedName("is_sync_failed")
  private Boolean isSyncFailed = null;

  @SerializedName("is_sync_in_flight")
  private Boolean isSyncInFlight = null;

  @SerializedName("is_sync_in_progress")
  private Boolean isSyncInProgress = null;

  @SerializedName("license")
  private String license = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("namespace_url")
  private String namespaceUrl = null;

  @SerializedName("num_files")
  private Integer numFiles = null;

  @SerializedName("package_type")
  private Integer packageType = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("release")
  private String release = null;

  @SerializedName("repository")
  private String repository = null;

  @SerializedName("repository_url")
  private String repositoryUrl = null;

  @SerializedName("security_scan_completed_at")
  private String securityScanCompletedAt = null;

  @SerializedName("security_scan_started_at")
  private String securityScanStartedAt = null;

  /**
   * 
   */
  @JsonAdapter(SecurityScanStatusEnum.Adapter.class)
  public enum SecurityScanStatusEnum {
    AWAITING_SECURITY_SCAN("Awaiting Security Scan"),
    
    SECURITY_SCANNING_IN_PROGRESS("Security Scanning in Progress"),
    
    SCAN_DETECTED_VULNERABILITIES("Scan Detected Vulnerabilities"),
    
    SCAN_DETECTED_NO_VULNERABILITIES("Scan Detected No Vulnerabilities"),
    
    SECURITY_SCANNING_DISABLED("Security Scanning Disabled"),
    
    SECURITY_SCANNING_FAILED("Security Scanning Failed"),
    
    SECURITY_SCANNING_SKIPPED("Security Scanning Skipped"),
    
    SECURITY_SCANNING_NOT_SUPPORTED("Security Scanning Not Supported");

    private String value;

    SecurityScanStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SecurityScanStatusEnum fromValue(String text) {
      for (SecurityScanStatusEnum b : SecurityScanStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SecurityScanStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecurityScanStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SecurityScanStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SecurityScanStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("security_scan_status")
  private SecurityScanStatusEnum securityScanStatus = null;

  @SerializedName("security_scan_status_updated_at")
  private String securityScanStatusUpdatedAt = null;

  @SerializedName("self_html_url")
  private String selfHtmlUrl = null;

  @SerializedName("self_url")
  private String selfUrl = null;

  @SerializedName("signature_url")
  private String signatureUrl = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("slug_perm")
  private String slugPerm = null;

  @SerializedName("stage")
  private Integer stage = null;

  @SerializedName("stage_str")
  private String stageStr = null;

  @SerializedName("stage_updated_at")
  private String stageUpdatedAt = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("status_reason")
  private String statusReason = null;

  @SerializedName("status_str")
  private String statusStr = null;

  @SerializedName("status_updated_at")
  private String statusUpdatedAt = null;

  @SerializedName("status_url")
  private String statusUrl = null;

  @SerializedName("subtype")
  private String subtype = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("sync_finished_at")
  private String syncFinishedAt = null;

  @SerializedName("sync_progress")
  private Integer syncProgress = null;

  @SerializedName("tags_immutable")
  private Object tagsImmutable = null;

  @SerializedName("type_display")
  private String typeDisplay = null;

  @SerializedName("uploaded_at")
  private String uploadedAt = null;

  @SerializedName("uploader")
  private String uploader = null;

  @SerializedName("uploader_url")
  private String uploaderUrl = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("version_orig")
  private String versionOrig = null;

  @SerializedName("vulnerability_scan_results_url")
  private String vulnerabilityScanResultsUrl = null;

  public VagrantPackageUpload architectures(List<PackagesownerrepoArchitectures> architectures) {
    this.architectures = architectures;
    return this;
  }

  public VagrantPackageUpload addArchitecturesItem(PackagesownerrepoArchitectures architecturesItem) {
    if (this.architectures == null) {
      this.architectures = new ArrayList<>();
    }
    this.architectures.add(architecturesItem);
    return this;
  }

   /**
   * 
   * @return architectures
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<PackagesownerrepoArchitectures> getArchitectures() {
    return architectures;
  }

  public void setArchitectures(List<PackagesownerrepoArchitectures> architectures) {
    this.architectures = architectures;
  }

  public VagrantPackageUpload cdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
    return this;
  }

   /**
   * 
   * @return cdnUrl
  **/
  @ApiModelProperty(value = "")
  public String getCdnUrl() {
    return cdnUrl;
  }

  public void setCdnUrl(String cdnUrl) {
    this.cdnUrl = cdnUrl;
  }

  public VagrantPackageUpload checksumMd5(String checksumMd5) {
    this.checksumMd5 = checksumMd5;
    return this;
  }

   /**
   * 
   * @return checksumMd5
  **/
  @ApiModelProperty(value = "")
  public String getChecksumMd5() {
    return checksumMd5;
  }

  public void setChecksumMd5(String checksumMd5) {
    this.checksumMd5 = checksumMd5;
  }

  public VagrantPackageUpload checksumSha1(String checksumSha1) {
    this.checksumSha1 = checksumSha1;
    return this;
  }

   /**
   * 
   * @return checksumSha1
  **/
  @ApiModelProperty(value = "")
  public String getChecksumSha1() {
    return checksumSha1;
  }

  public void setChecksumSha1(String checksumSha1) {
    this.checksumSha1 = checksumSha1;
  }

  public VagrantPackageUpload checksumSha256(String checksumSha256) {
    this.checksumSha256 = checksumSha256;
    return this;
  }

   /**
   * 
   * @return checksumSha256
  **/
  @ApiModelProperty(value = "")
  public String getChecksumSha256() {
    return checksumSha256;
  }

  public void setChecksumSha256(String checksumSha256) {
    this.checksumSha256 = checksumSha256;
  }

  public VagrantPackageUpload checksumSha512(String checksumSha512) {
    this.checksumSha512 = checksumSha512;
    return this;
  }

   /**
   * 
   * @return checksumSha512
  **/
  @ApiModelProperty(value = "")
  public String getChecksumSha512() {
    return checksumSha512;
  }

  public void setChecksumSha512(String checksumSha512) {
    this.checksumSha512 = checksumSha512;
  }

  public VagrantPackageUpload dependenciesChecksumMd5(String dependenciesChecksumMd5) {
    this.dependenciesChecksumMd5 = dependenciesChecksumMd5;
    return this;
  }

   /**
   * A checksum of all of the package&#39;s dependencies.
   * @return dependenciesChecksumMd5
  **/
  @ApiModelProperty(value = "A checksum of all of the package's dependencies.")
  public String getDependenciesChecksumMd5() {
    return dependenciesChecksumMd5;
  }

  public void setDependenciesChecksumMd5(String dependenciesChecksumMd5) {
    this.dependenciesChecksumMd5 = dependenciesChecksumMd5;
  }

  public VagrantPackageUpload dependenciesUrl(String dependenciesUrl) {
    this.dependenciesUrl = dependenciesUrl;
    return this;
  }

   /**
   * 
   * @return dependenciesUrl
  **/
  @ApiModelProperty(value = "")
  public String getDependenciesUrl() {
    return dependenciesUrl;
  }

  public void setDependenciesUrl(String dependenciesUrl) {
    this.dependenciesUrl = dependenciesUrl;
  }

  public VagrantPackageUpload description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A textual description of this package.
   * @return description
  **/
  @ApiModelProperty(value = "A textual description of this package.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VagrantPackageUpload distro(Object distro) {
    this.distro = distro;
    return this;
  }

   /**
   * 
   * @return distro
  **/
  @ApiModelProperty(value = "")
  public Object getDistro() {
    return distro;
  }

  public void setDistro(Object distro) {
    this.distro = distro;
  }

  public VagrantPackageUpload distroVersion(Object distroVersion) {
    this.distroVersion = distroVersion;
    return this;
  }

   /**
   * 
   * @return distroVersion
  **/
  @ApiModelProperty(value = "")
  public Object getDistroVersion() {
    return distroVersion;
  }

  public void setDistroVersion(Object distroVersion) {
    this.distroVersion = distroVersion;
  }

  public VagrantPackageUpload downloads(Integer downloads) {
    this.downloads = downloads;
    return this;
  }

   /**
   * 
   * @return downloads
  **/
  @ApiModelProperty(value = "")
  public Integer getDownloads() {
    return downloads;
  }

  public void setDownloads(Integer downloads) {
    this.downloads = downloads;
  }

  public VagrantPackageUpload epoch(Integer epoch) {
    this.epoch = epoch;
    return this;
  }

   /**
   * The epoch of the package version (if any).
   * @return epoch
  **/
  @ApiModelProperty(value = "The epoch of the package version (if any).")
  public Integer getEpoch() {
    return epoch;
  }

  public void setEpoch(Integer epoch) {
    this.epoch = epoch;
  }

  public VagrantPackageUpload extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * 
   * @return extension
  **/
  @ApiModelProperty(value = "")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public VagrantPackageUpload filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * 
   * @return filename
  **/
  @ApiModelProperty(value = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public VagrantPackageUpload files(List<PackagesownerrepoFiles> files) {
    this.files = files;
    return this;
  }

  public VagrantPackageUpload addFilesItem(PackagesownerrepoFiles filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * 
   * @return files
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<PackagesownerrepoFiles> getFiles() {
    return files;
  }

  public void setFiles(List<PackagesownerrepoFiles> files) {
    this.files = files;
  }

  public VagrantPackageUpload format(String format) {
    this.format = format;
    return this;
  }

   /**
   * 
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public VagrantPackageUpload formatUrl(String formatUrl) {
    this.formatUrl = formatUrl;
    return this;
  }

   /**
   * 
   * @return formatUrl
  **/
  @ApiModelProperty(value = "")
  public String getFormatUrl() {
    return formatUrl;
  }

  public void setFormatUrl(String formatUrl) {
    this.formatUrl = formatUrl;
  }

  public VagrantPackageUpload identifierPerm(String identifierPerm) {
    this.identifierPerm = identifierPerm;
    return this;
  }

   /**
   * Unique and permanent identifier for the package.
   * @return identifierPerm
  **/
  @ApiModelProperty(value = "Unique and permanent identifier for the package.")
  public String getIdentifierPerm() {
    return identifierPerm;
  }

  public void setIdentifierPerm(String identifierPerm) {
    this.identifierPerm = identifierPerm;
  }

  public VagrantPackageUpload indexed(Boolean indexed) {
    this.indexed = indexed;
    return this;
  }

   /**
   * 
   * @return indexed
  **/
  @ApiModelProperty(value = "")
  public Boolean isIndexed() {
    return indexed;
  }

  public void setIndexed(Boolean indexed) {
    this.indexed = indexed;
  }

  public VagrantPackageUpload isDownloadable(Boolean isDownloadable) {
    this.isDownloadable = isDownloadable;
    return this;
  }

   /**
   * 
   * @return isDownloadable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDownloadable() {
    return isDownloadable;
  }

  public void setIsDownloadable(Boolean isDownloadable) {
    this.isDownloadable = isDownloadable;
  }

  public VagrantPackageUpload isQuarantined(Boolean isQuarantined) {
    this.isQuarantined = isQuarantined;
    return this;
  }

   /**
   * 
   * @return isQuarantined
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsQuarantined() {
    return isQuarantined;
  }

  public void setIsQuarantined(Boolean isQuarantined) {
    this.isQuarantined = isQuarantined;
  }

  public VagrantPackageUpload isSyncAwaiting(Boolean isSyncAwaiting) {
    this.isSyncAwaiting = isSyncAwaiting;
    return this;
  }

   /**
   * 
   * @return isSyncAwaiting
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncAwaiting() {
    return isSyncAwaiting;
  }

  public void setIsSyncAwaiting(Boolean isSyncAwaiting) {
    this.isSyncAwaiting = isSyncAwaiting;
  }

  public VagrantPackageUpload isSyncCompleted(Boolean isSyncCompleted) {
    this.isSyncCompleted = isSyncCompleted;
    return this;
  }

   /**
   * 
   * @return isSyncCompleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncCompleted() {
    return isSyncCompleted;
  }

  public void setIsSyncCompleted(Boolean isSyncCompleted) {
    this.isSyncCompleted = isSyncCompleted;
  }

  public VagrantPackageUpload isSyncFailed(Boolean isSyncFailed) {
    this.isSyncFailed = isSyncFailed;
    return this;
  }

   /**
   * 
   * @return isSyncFailed
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncFailed() {
    return isSyncFailed;
  }

  public void setIsSyncFailed(Boolean isSyncFailed) {
    this.isSyncFailed = isSyncFailed;
  }

  public VagrantPackageUpload isSyncInFlight(Boolean isSyncInFlight) {
    this.isSyncInFlight = isSyncInFlight;
    return this;
  }

   /**
   * 
   * @return isSyncInFlight
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncInFlight() {
    return isSyncInFlight;
  }

  public void setIsSyncInFlight(Boolean isSyncInFlight) {
    this.isSyncInFlight = isSyncInFlight;
  }

  public VagrantPackageUpload isSyncInProgress(Boolean isSyncInProgress) {
    this.isSyncInProgress = isSyncInProgress;
    return this;
  }

   /**
   * 
   * @return isSyncInProgress
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncInProgress() {
    return isSyncInProgress;
  }

  public void setIsSyncInProgress(Boolean isSyncInProgress) {
    this.isSyncInProgress = isSyncInProgress;
  }

  public VagrantPackageUpload license(String license) {
    this.license = license;
    return this;
  }

   /**
   * The license of this package.
   * @return license
  **/
  @ApiModelProperty(value = "The license of this package.")
  public String getLicense() {
    return license;
  }

  public void setLicense(String license) {
    this.license = license;
  }

  public VagrantPackageUpload name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this package.
   * @return name
  **/
  @NotNull
  @ApiModelProperty(example = "tcl", required = true, value = "The name of this package.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VagrantPackageUpload namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * 
   * @return namespace
  **/
  @ApiModelProperty(value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public VagrantPackageUpload namespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
    return this;
  }

   /**
   * 
   * @return namespaceUrl
  **/
  @ApiModelProperty(value = "")
  public String getNamespaceUrl() {
    return namespaceUrl;
  }

  public void setNamespaceUrl(String namespaceUrl) {
    this.namespaceUrl = namespaceUrl;
  }

  public VagrantPackageUpload numFiles(Integer numFiles) {
    this.numFiles = numFiles;
    return this;
  }

   /**
   * 
   * @return numFiles
  **/
  @ApiModelProperty(value = "")
  public Integer getNumFiles() {
    return numFiles;
  }

  public void setNumFiles(Integer numFiles) {
    this.numFiles = numFiles;
  }

  public VagrantPackageUpload packageType(Integer packageType) {
    this.packageType = packageType;
    return this;
  }

   /**
   * The type of package contents.
   * @return packageType
  **/
  @ApiModelProperty(value = "The type of package contents.")
  public Integer getPackageType() {
    return packageType;
  }

  public void setPackageType(Integer packageType) {
    this.packageType = packageType;
  }

  public VagrantPackageUpload provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * The virtual machine provider for the box.
   * @return provider
  **/
  @NotNull
  @ApiModelProperty(example = "virtualbox", required = true, value = "The virtual machine provider for the box.")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public VagrantPackageUpload release(String release) {
    this.release = release;
    return this;
  }

   /**
   * The release of the package version (if any).
   * @return release
  **/
  @ApiModelProperty(value = "The release of the package version (if any).")
  public String getRelease() {
    return release;
  }

  public void setRelease(String release) {
    this.release = release;
  }

  public VagrantPackageUpload repository(String repository) {
    this.repository = repository;
    return this;
  }

   /**
   * 
   * @return repository
  **/
  @ApiModelProperty(value = "")
  public String getRepository() {
    return repository;
  }

  public void setRepository(String repository) {
    this.repository = repository;
  }

  public VagrantPackageUpload repositoryUrl(String repositoryUrl) {
    this.repositoryUrl = repositoryUrl;
    return this;
  }

   /**
   * 
   * @return repositoryUrl
  **/
  @ApiModelProperty(value = "")
  public String getRepositoryUrl() {
    return repositoryUrl;
  }

  public void setRepositoryUrl(String repositoryUrl) {
    this.repositoryUrl = repositoryUrl;
  }

  public VagrantPackageUpload securityScanCompletedAt(String securityScanCompletedAt) {
    this.securityScanCompletedAt = securityScanCompletedAt;
    return this;
  }

   /**
   * The datetime the security scanning was completed.
   * @return securityScanCompletedAt
  **/
  @ApiModelProperty(value = "The datetime the security scanning was completed.")
  public String getSecurityScanCompletedAt() {
    return securityScanCompletedAt;
  }

  public void setSecurityScanCompletedAt(String securityScanCompletedAt) {
    this.securityScanCompletedAt = securityScanCompletedAt;
  }

  public VagrantPackageUpload securityScanStartedAt(String securityScanStartedAt) {
    this.securityScanStartedAt = securityScanStartedAt;
    return this;
  }

   /**
   * The datetime the security scanning was started.
   * @return securityScanStartedAt
  **/
  @ApiModelProperty(value = "The datetime the security scanning was started.")
  public String getSecurityScanStartedAt() {
    return securityScanStartedAt;
  }

  public void setSecurityScanStartedAt(String securityScanStartedAt) {
    this.securityScanStartedAt = securityScanStartedAt;
  }

  public VagrantPackageUpload securityScanStatus(SecurityScanStatusEnum securityScanStatus) {
    this.securityScanStatus = securityScanStatus;
    return this;
  }

   /**
   * 
   * @return securityScanStatus
  **/
  @ApiModelProperty(value = "")
  public SecurityScanStatusEnum getSecurityScanStatus() {
    return securityScanStatus;
  }

  public void setSecurityScanStatus(SecurityScanStatusEnum securityScanStatus) {
    this.securityScanStatus = securityScanStatus;
  }

  public VagrantPackageUpload securityScanStatusUpdatedAt(String securityScanStatusUpdatedAt) {
    this.securityScanStatusUpdatedAt = securityScanStatusUpdatedAt;
    return this;
  }

   /**
   * The datetime the security scanning status was updated.
   * @return securityScanStatusUpdatedAt
  **/
  @ApiModelProperty(value = "The datetime the security scanning status was updated.")
  public String getSecurityScanStatusUpdatedAt() {
    return securityScanStatusUpdatedAt;
  }

  public void setSecurityScanStatusUpdatedAt(String securityScanStatusUpdatedAt) {
    this.securityScanStatusUpdatedAt = securityScanStatusUpdatedAt;
  }

  public VagrantPackageUpload selfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
    return this;
  }

   /**
   * 
   * @return selfHtmlUrl
  **/
  @ApiModelProperty(value = "")
  public String getSelfHtmlUrl() {
    return selfHtmlUrl;
  }

  public void setSelfHtmlUrl(String selfHtmlUrl) {
    this.selfHtmlUrl = selfHtmlUrl;
  }

  public VagrantPackageUpload selfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
    return this;
  }

   /**
   * 
   * @return selfUrl
  **/
  @ApiModelProperty(value = "")
  public String getSelfUrl() {
    return selfUrl;
  }

  public void setSelfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
  }

  public VagrantPackageUpload signatureUrl(String signatureUrl) {
    this.signatureUrl = signatureUrl;
    return this;
  }

   /**
   * 
   * @return signatureUrl
  **/
  @ApiModelProperty(value = "")
  public String getSignatureUrl() {
    return signatureUrl;
  }

  public void setSignatureUrl(String signatureUrl) {
    this.signatureUrl = signatureUrl;
  }

  public VagrantPackageUpload size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * The calculated size of the package.
   * @return size
  **/
  @ApiModelProperty(value = "The calculated size of the package.")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public VagrantPackageUpload slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * The public unique identifier for the package.
   * @return slug
  **/
  @ApiModelProperty(value = "The public unique identifier for the package.")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public VagrantPackageUpload slugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
    return this;
  }

   /**
   * 
   * @return slugPerm
  **/
  @ApiModelProperty(value = "")
  public String getSlugPerm() {
    return slugPerm;
  }

  public void setSlugPerm(String slugPerm) {
    this.slugPerm = slugPerm;
  }

  public VagrantPackageUpload stage(Integer stage) {
    this.stage = stage;
    return this;
  }

   /**
   * The synchronisation (in progress) stage of the package.
   * @return stage
  **/
  @ApiModelProperty(value = "The synchronisation (in progress) stage of the package.")
  public Integer getStage() {
    return stage;
  }

  public void setStage(Integer stage) {
    this.stage = stage;
  }

  public VagrantPackageUpload stageStr(String stageStr) {
    this.stageStr = stageStr;
    return this;
  }

   /**
   * 
   * @return stageStr
  **/
  @ApiModelProperty(value = "")
  public String getStageStr() {
    return stageStr;
  }

  public void setStageStr(String stageStr) {
    this.stageStr = stageStr;
  }

  public VagrantPackageUpload stageUpdatedAt(String stageUpdatedAt) {
    this.stageUpdatedAt = stageUpdatedAt;
    return this;
  }

   /**
   * The datetime the package stage was updated at.
   * @return stageUpdatedAt
  **/
  @ApiModelProperty(value = "The datetime the package stage was updated at.")
  public String getStageUpdatedAt() {
    return stageUpdatedAt;
  }

  public void setStageUpdatedAt(String stageUpdatedAt) {
    this.stageUpdatedAt = stageUpdatedAt;
  }

  public VagrantPackageUpload status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * The synchronisation status of the package.
   * @return status
  **/
  @ApiModelProperty(value = "The synchronisation status of the package.")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public VagrantPackageUpload statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

   /**
   * A textual description for the synchronous status reason (if any
   * @return statusReason
  **/
  @ApiModelProperty(value = "A textual description for the synchronous status reason (if any")
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }

  public VagrantPackageUpload statusStr(String statusStr) {
    this.statusStr = statusStr;
    return this;
  }

   /**
   * 
   * @return statusStr
  **/
  @ApiModelProperty(value = "")
  public String getStatusStr() {
    return statusStr;
  }

  public void setStatusStr(String statusStr) {
    this.statusStr = statusStr;
  }

  public VagrantPackageUpload statusUpdatedAt(String statusUpdatedAt) {
    this.statusUpdatedAt = statusUpdatedAt;
    return this;
  }

   /**
   * The datetime the package status was updated at.
   * @return statusUpdatedAt
  **/
  @ApiModelProperty(value = "The datetime the package status was updated at.")
  public String getStatusUpdatedAt() {
    return statusUpdatedAt;
  }

  public void setStatusUpdatedAt(String statusUpdatedAt) {
    this.statusUpdatedAt = statusUpdatedAt;
  }

  public VagrantPackageUpload statusUrl(String statusUrl) {
    this.statusUrl = statusUrl;
    return this;
  }

   /**
   * 
   * @return statusUrl
  **/
  @ApiModelProperty(value = "")
  public String getStatusUrl() {
    return statusUrl;
  }

  public void setStatusUrl(String statusUrl) {
    this.statusUrl = statusUrl;
  }

  public VagrantPackageUpload subtype(String subtype) {
    this.subtype = subtype;
    return this;
  }

   /**
   * 
   * @return subtype
  **/
  @ApiModelProperty(value = "")
  public String getSubtype() {
    return subtype;
  }

  public void setSubtype(String subtype) {
    this.subtype = subtype;
  }

  public VagrantPackageUpload summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * A one-liner synopsis of this package.
   * @return summary
  **/
  @ApiModelProperty(value = "A one-liner synopsis of this package.")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public VagrantPackageUpload syncFinishedAt(String syncFinishedAt) {
    this.syncFinishedAt = syncFinishedAt;
    return this;
  }

   /**
   * The datetime the package sync was finished at.
   * @return syncFinishedAt
  **/
  @ApiModelProperty(value = "The datetime the package sync was finished at.")
  public String getSyncFinishedAt() {
    return syncFinishedAt;
  }

  public void setSyncFinishedAt(String syncFinishedAt) {
    this.syncFinishedAt = syncFinishedAt;
  }

  public VagrantPackageUpload syncProgress(Integer syncProgress) {
    this.syncProgress = syncProgress;
    return this;
  }

   /**
   * Synchronisation progress (from 0-100)
   * @return syncProgress
  **/
  @ApiModelProperty(value = "Synchronisation progress (from 0-100)")
  public Integer getSyncProgress() {
    return syncProgress;
  }

  public void setSyncProgress(Integer syncProgress) {
    this.syncProgress = syncProgress;
  }

  public VagrantPackageUpload tagsImmutable(Object tagsImmutable) {
    this.tagsImmutable = tagsImmutable;
    return this;
  }

   /**
   * All immutable tags on the package, grouped by tag type. Immutable tags cannot be (easily) deleted.
   * @return tagsImmutable
  **/
  @ApiModelProperty(value = "All immutable tags on the package, grouped by tag type. Immutable tags cannot be (easily) deleted.")
  public Object getTagsImmutable() {
    return tagsImmutable;
  }

  public void setTagsImmutable(Object tagsImmutable) {
    this.tagsImmutable = tagsImmutable;
  }

  public VagrantPackageUpload typeDisplay(String typeDisplay) {
    this.typeDisplay = typeDisplay;
    return this;
  }

   /**
   * 
   * @return typeDisplay
  **/
  @ApiModelProperty(value = "")
  public String getTypeDisplay() {
    return typeDisplay;
  }

  public void setTypeDisplay(String typeDisplay) {
    this.typeDisplay = typeDisplay;
  }

  public VagrantPackageUpload uploadedAt(String uploadedAt) {
    this.uploadedAt = uploadedAt;
    return this;
  }

   /**
   * The date this package was uploaded.
   * @return uploadedAt
  **/
  @ApiModelProperty(value = "The date this package was uploaded.")
  public String getUploadedAt() {
    return uploadedAt;
  }

  public void setUploadedAt(String uploadedAt) {
    this.uploadedAt = uploadedAt;
  }

  public VagrantPackageUpload uploader(String uploader) {
    this.uploader = uploader;
    return this;
  }

   /**
   * 
   * @return uploader
  **/
  @ApiModelProperty(value = "")
  public String getUploader() {
    return uploader;
  }

  public void setUploader(String uploader) {
    this.uploader = uploader;
  }

  public VagrantPackageUpload uploaderUrl(String uploaderUrl) {
    this.uploaderUrl = uploaderUrl;
    return this;
  }

   /**
   * 
   * @return uploaderUrl
  **/
  @ApiModelProperty(value = "")
  public String getUploaderUrl() {
    return uploaderUrl;
  }

  public void setUploaderUrl(String uploaderUrl) {
    this.uploaderUrl = uploaderUrl;
  }

  public VagrantPackageUpload version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The raw version for this package.
   * @return version
  **/
  @NotNull
  @ApiModelProperty(example = "1.0", required = true, value = "The raw version for this package.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public VagrantPackageUpload versionOrig(String versionOrig) {
    this.versionOrig = versionOrig;
    return this;
  }

   /**
   * 
   * @return versionOrig
  **/
  @ApiModelProperty(value = "")
  public String getVersionOrig() {
    return versionOrig;
  }

  public void setVersionOrig(String versionOrig) {
    this.versionOrig = versionOrig;
  }

  public VagrantPackageUpload vulnerabilityScanResultsUrl(String vulnerabilityScanResultsUrl) {
    this.vulnerabilityScanResultsUrl = vulnerabilityScanResultsUrl;
    return this;
  }

   /**
   * 
   * @return vulnerabilityScanResultsUrl
  **/
  @ApiModelProperty(value = "")
  public String getVulnerabilityScanResultsUrl() {
    return vulnerabilityScanResultsUrl;
  }

  public void setVulnerabilityScanResultsUrl(String vulnerabilityScanResultsUrl) {
    this.vulnerabilityScanResultsUrl = vulnerabilityScanResultsUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VagrantPackageUpload vagrantPackageUpload = (VagrantPackageUpload) o;
    return Objects.equals(this.architectures, vagrantPackageUpload.architectures) &&
        Objects.equals(this.cdnUrl, vagrantPackageUpload.cdnUrl) &&
        Objects.equals(this.checksumMd5, vagrantPackageUpload.checksumMd5) &&
        Objects.equals(this.checksumSha1, vagrantPackageUpload.checksumSha1) &&
        Objects.equals(this.checksumSha256, vagrantPackageUpload.checksumSha256) &&
        Objects.equals(this.checksumSha512, vagrantPackageUpload.checksumSha512) &&
        Objects.equals(this.dependenciesChecksumMd5, vagrantPackageUpload.dependenciesChecksumMd5) &&
        Objects.equals(this.dependenciesUrl, vagrantPackageUpload.dependenciesUrl) &&
        Objects.equals(this.description, vagrantPackageUpload.description) &&
        Objects.equals(this.distro, vagrantPackageUpload.distro) &&
        Objects.equals(this.distroVersion, vagrantPackageUpload.distroVersion) &&
        Objects.equals(this.downloads, vagrantPackageUpload.downloads) &&
        Objects.equals(this.epoch, vagrantPackageUpload.epoch) &&
        Objects.equals(this.extension, vagrantPackageUpload.extension) &&
        Objects.equals(this.filename, vagrantPackageUpload.filename) &&
        Objects.equals(this.files, vagrantPackageUpload.files) &&
        Objects.equals(this.format, vagrantPackageUpload.format) &&
        Objects.equals(this.formatUrl, vagrantPackageUpload.formatUrl) &&
        Objects.equals(this.identifierPerm, vagrantPackageUpload.identifierPerm) &&
        Objects.equals(this.indexed, vagrantPackageUpload.indexed) &&
        Objects.equals(this.isDownloadable, vagrantPackageUpload.isDownloadable) &&
        Objects.equals(this.isQuarantined, vagrantPackageUpload.isQuarantined) &&
        Objects.equals(this.isSyncAwaiting, vagrantPackageUpload.isSyncAwaiting) &&
        Objects.equals(this.isSyncCompleted, vagrantPackageUpload.isSyncCompleted) &&
        Objects.equals(this.isSyncFailed, vagrantPackageUpload.isSyncFailed) &&
        Objects.equals(this.isSyncInFlight, vagrantPackageUpload.isSyncInFlight) &&
        Objects.equals(this.isSyncInProgress, vagrantPackageUpload.isSyncInProgress) &&
        Objects.equals(this.license, vagrantPackageUpload.license) &&
        Objects.equals(this.name, vagrantPackageUpload.name) &&
        Objects.equals(this.namespace, vagrantPackageUpload.namespace) &&
        Objects.equals(this.namespaceUrl, vagrantPackageUpload.namespaceUrl) &&
        Objects.equals(this.numFiles, vagrantPackageUpload.numFiles) &&
        Objects.equals(this.packageType, vagrantPackageUpload.packageType) &&
        Objects.equals(this.provider, vagrantPackageUpload.provider) &&
        Objects.equals(this.release, vagrantPackageUpload.release) &&
        Objects.equals(this.repository, vagrantPackageUpload.repository) &&
        Objects.equals(this.repositoryUrl, vagrantPackageUpload.repositoryUrl) &&
        Objects.equals(this.securityScanCompletedAt, vagrantPackageUpload.securityScanCompletedAt) &&
        Objects.equals(this.securityScanStartedAt, vagrantPackageUpload.securityScanStartedAt) &&
        Objects.equals(this.securityScanStatus, vagrantPackageUpload.securityScanStatus) &&
        Objects.equals(this.securityScanStatusUpdatedAt, vagrantPackageUpload.securityScanStatusUpdatedAt) &&
        Objects.equals(this.selfHtmlUrl, vagrantPackageUpload.selfHtmlUrl) &&
        Objects.equals(this.selfUrl, vagrantPackageUpload.selfUrl) &&
        Objects.equals(this.signatureUrl, vagrantPackageUpload.signatureUrl) &&
        Objects.equals(this.size, vagrantPackageUpload.size) &&
        Objects.equals(this.slug, vagrantPackageUpload.slug) &&
        Objects.equals(this.slugPerm, vagrantPackageUpload.slugPerm) &&
        Objects.equals(this.stage, vagrantPackageUpload.stage) &&
        Objects.equals(this.stageStr, vagrantPackageUpload.stageStr) &&
        Objects.equals(this.stageUpdatedAt, vagrantPackageUpload.stageUpdatedAt) &&
        Objects.equals(this.status, vagrantPackageUpload.status) &&
        Objects.equals(this.statusReason, vagrantPackageUpload.statusReason) &&
        Objects.equals(this.statusStr, vagrantPackageUpload.statusStr) &&
        Objects.equals(this.statusUpdatedAt, vagrantPackageUpload.statusUpdatedAt) &&
        Objects.equals(this.statusUrl, vagrantPackageUpload.statusUrl) &&
        Objects.equals(this.subtype, vagrantPackageUpload.subtype) &&
        Objects.equals(this.summary, vagrantPackageUpload.summary) &&
        Objects.equals(this.syncFinishedAt, vagrantPackageUpload.syncFinishedAt) &&
        Objects.equals(this.syncProgress, vagrantPackageUpload.syncProgress) &&
        Objects.equals(this.tagsImmutable, vagrantPackageUpload.tagsImmutable) &&
        Objects.equals(this.typeDisplay, vagrantPackageUpload.typeDisplay) &&
        Objects.equals(this.uploadedAt, vagrantPackageUpload.uploadedAt) &&
        Objects.equals(this.uploader, vagrantPackageUpload.uploader) &&
        Objects.equals(this.uploaderUrl, vagrantPackageUpload.uploaderUrl) &&
        Objects.equals(this.version, vagrantPackageUpload.version) &&
        Objects.equals(this.versionOrig, vagrantPackageUpload.versionOrig) &&
        Objects.equals(this.vulnerabilityScanResultsUrl, vagrantPackageUpload.vulnerabilityScanResultsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architectures, cdnUrl, checksumMd5, checksumSha1, checksumSha256, checksumSha512, dependenciesChecksumMd5, dependenciesUrl, description, distro, distroVersion, downloads, epoch, extension, filename, files, format, formatUrl, identifierPerm, indexed, isDownloadable, isQuarantined, isSyncAwaiting, isSyncCompleted, isSyncFailed, isSyncInFlight, isSyncInProgress, license, name, namespace, namespaceUrl, numFiles, packageType, provider, release, repository, repositoryUrl, securityScanCompletedAt, securityScanStartedAt, securityScanStatus, securityScanStatusUpdatedAt, selfHtmlUrl, selfUrl, signatureUrl, size, slug, slugPerm, stage, stageStr, stageUpdatedAt, status, statusReason, statusStr, statusUpdatedAt, statusUrl, subtype, summary, syncFinishedAt, syncProgress, tagsImmutable, typeDisplay, uploadedAt, uploader, uploaderUrl, version, versionOrig, vulnerabilityScanResultsUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VagrantPackageUpload {\n");
    
    sb.append("    architectures: ").append(toIndentedString(architectures)).append("\n");
    sb.append("    cdnUrl: ").append(toIndentedString(cdnUrl)).append("\n");
    sb.append("    checksumMd5: ").append(toIndentedString(checksumMd5)).append("\n");
    sb.append("    checksumSha1: ").append(toIndentedString(checksumSha1)).append("\n");
    sb.append("    checksumSha256: ").append(toIndentedString(checksumSha256)).append("\n");
    sb.append("    checksumSha512: ").append(toIndentedString(checksumSha512)).append("\n");
    sb.append("    dependenciesChecksumMd5: ").append(toIndentedString(dependenciesChecksumMd5)).append("\n");
    sb.append("    dependenciesUrl: ").append(toIndentedString(dependenciesUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    distro: ").append(toIndentedString(distro)).append("\n");
    sb.append("    distroVersion: ").append(toIndentedString(distroVersion)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    epoch: ").append(toIndentedString(epoch)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    formatUrl: ").append(toIndentedString(formatUrl)).append("\n");
    sb.append("    identifierPerm: ").append(toIndentedString(identifierPerm)).append("\n");
    sb.append("    indexed: ").append(toIndentedString(indexed)).append("\n");
    sb.append("    isDownloadable: ").append(toIndentedString(isDownloadable)).append("\n");
    sb.append("    isQuarantined: ").append(toIndentedString(isQuarantined)).append("\n");
    sb.append("    isSyncAwaiting: ").append(toIndentedString(isSyncAwaiting)).append("\n");
    sb.append("    isSyncCompleted: ").append(toIndentedString(isSyncCompleted)).append("\n");
    sb.append("    isSyncFailed: ").append(toIndentedString(isSyncFailed)).append("\n");
    sb.append("    isSyncInFlight: ").append(toIndentedString(isSyncInFlight)).append("\n");
    sb.append("    isSyncInProgress: ").append(toIndentedString(isSyncInProgress)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    namespaceUrl: ").append(toIndentedString(namespaceUrl)).append("\n");
    sb.append("    numFiles: ").append(toIndentedString(numFiles)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    repositoryUrl: ").append(toIndentedString(repositoryUrl)).append("\n");
    sb.append("    securityScanCompletedAt: ").append(toIndentedString(securityScanCompletedAt)).append("\n");
    sb.append("    securityScanStartedAt: ").append(toIndentedString(securityScanStartedAt)).append("\n");
    sb.append("    securityScanStatus: ").append(toIndentedString(securityScanStatus)).append("\n");
    sb.append("    securityScanStatusUpdatedAt: ").append(toIndentedString(securityScanStatusUpdatedAt)).append("\n");
    sb.append("    selfHtmlUrl: ").append(toIndentedString(selfHtmlUrl)).append("\n");
    sb.append("    selfUrl: ").append(toIndentedString(selfUrl)).append("\n");
    sb.append("    signatureUrl: ").append(toIndentedString(signatureUrl)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    slugPerm: ").append(toIndentedString(slugPerm)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    stageStr: ").append(toIndentedString(stageStr)).append("\n");
    sb.append("    stageUpdatedAt: ").append(toIndentedString(stageUpdatedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    statusStr: ").append(toIndentedString(statusStr)).append("\n");
    sb.append("    statusUpdatedAt: ").append(toIndentedString(statusUpdatedAt)).append("\n");
    sb.append("    statusUrl: ").append(toIndentedString(statusUrl)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    syncFinishedAt: ").append(toIndentedString(syncFinishedAt)).append("\n");
    sb.append("    syncProgress: ").append(toIndentedString(syncProgress)).append("\n");
    sb.append("    tagsImmutable: ").append(toIndentedString(tagsImmutable)).append("\n");
    sb.append("    typeDisplay: ").append(toIndentedString(typeDisplay)).append("\n");
    sb.append("    uploadedAt: ").append(toIndentedString(uploadedAt)).append("\n");
    sb.append("    uploader: ").append(toIndentedString(uploader)).append("\n");
    sb.append("    uploaderUrl: ").append(toIndentedString(uploaderUrl)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionOrig: ").append(toIndentedString(versionOrig)).append("\n");
    sb.append("    vulnerabilityScanResultsUrl: ").append(toIndentedString(vulnerabilityScanResultsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

