/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * OrganizationMembershipRoleUpdate
 */

public class OrganizationMembershipRoleUpdate implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("email")
  private String email = null;

  @SerializedName("has_two_factor")
  private Boolean hasTwoFactor = null;

  @SerializedName("joined_at")
  private OffsetDateTime joinedAt = null;

  @SerializedName("last_login_at")
  private OffsetDateTime lastLoginAt = null;

  /**
   * Gets or Sets lastLoginMethod
   */
  @JsonAdapter(LastLoginMethodEnum.Adapter.class)
  public enum LastLoginMethodEnum {
    UNKNOWN("Unknown"),
    
    PASSWORD("Password"),
    
    SOCIAL("Social"),
    
    SAML("SAML");

    private String value;

    LastLoginMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastLoginMethodEnum fromValue(String text) {
      for (LastLoginMethodEnum b : LastLoginMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LastLoginMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastLoginMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastLoginMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LastLoginMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("last_login_method")
  private LastLoginMethodEnum lastLoginMethod = LastLoginMethodEnum.UNKNOWN;

  /**
   * Gets or Sets role
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    OWNER("Owner"),
    
    MANAGER("Manager"),
    
    MEMBER("Member"),
    
    COLLABORATOR("Collaborator");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("role")
  private RoleEnum role = RoleEnum.OWNER;

  @SerializedName("user")
  private String user = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("user_name")
  private String userName = null;

  @SerializedName("user_url")
  private String userUrl = null;

  /**
   * Gets or Sets visibility
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PUBLIC("Public"),
    
    PRIVATE("Private");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String text) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VisibilityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("visibility")
  private VisibilityEnum visibility = VisibilityEnum.PUBLIC;

   /**
   * Get email
   * @return email
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

   /**
   * Get hasTwoFactor
   * @return hasTwoFactor
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasTwoFactor() {
    return hasTwoFactor;
  }

   /**
   * Get joinedAt
   * @return joinedAt
  **/
  @Valid
  @ApiModelProperty(value = "")
  public OffsetDateTime getJoinedAt() {
    return joinedAt;
  }

   /**
   * Get lastLoginAt
   * @return lastLoginAt
  **/
  @Valid
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastLoginAt() {
    return lastLoginAt;
  }

   /**
   * Get lastLoginMethod
   * @return lastLoginMethod
  **/
  @ApiModelProperty(value = "")
  public LastLoginMethodEnum getLastLoginMethod() {
    return lastLoginMethod;
  }

  public OrganizationMembershipRoleUpdate role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @ApiModelProperty(value = "")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

   /**
   * Get user
   * @return user
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getUser() {
    return user;
  }

   /**
   * Get userId
   * @return userId
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

   /**
   * Get userName
   * @return userName
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getUserName() {
    return userName;
  }

   /**
   * Get userUrl
   * @return userUrl
  **/
  @ApiModelProperty(value = "")
  public String getUserUrl() {
    return userUrl;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @ApiModelProperty(value = "")
  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationMembershipRoleUpdate organizationMembershipRoleUpdate = (OrganizationMembershipRoleUpdate) o;
    return Objects.equals(this.email, organizationMembershipRoleUpdate.email) &&
        Objects.equals(this.hasTwoFactor, organizationMembershipRoleUpdate.hasTwoFactor) &&
        Objects.equals(this.joinedAt, organizationMembershipRoleUpdate.joinedAt) &&
        Objects.equals(this.lastLoginAt, organizationMembershipRoleUpdate.lastLoginAt) &&
        Objects.equals(this.lastLoginMethod, organizationMembershipRoleUpdate.lastLoginMethod) &&
        Objects.equals(this.role, organizationMembershipRoleUpdate.role) &&
        Objects.equals(this.user, organizationMembershipRoleUpdate.user) &&
        Objects.equals(this.userId, organizationMembershipRoleUpdate.userId) &&
        Objects.equals(this.userName, organizationMembershipRoleUpdate.userName) &&
        Objects.equals(this.userUrl, organizationMembershipRoleUpdate.userUrl) &&
        Objects.equals(this.visibility, organizationMembershipRoleUpdate.visibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, hasTwoFactor, joinedAt, lastLoginAt, lastLoginMethod, role, user, userId, userName, userUrl, visibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationMembershipRoleUpdate {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    hasTwoFactor: ").append(toIndentedString(hasTwoFactor)).append("\n");
    sb.append("    joinedAt: ").append(toIndentedString(joinedAt)).append("\n");
    sb.append("    lastLoginAt: ").append(toIndentedString(lastLoginAt)).append("\n");
    sb.append("    lastLoginMethod: ").append(toIndentedString(lastLoginMethod)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userUrl: ").append(toIndentedString(userUrl)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

