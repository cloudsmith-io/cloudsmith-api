/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * PackageStatus
 */

public class PackageStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("is_cancellable")
  private Boolean isCancellable = null;

  @SerializedName("is_copyable")
  private Boolean isCopyable = null;

  @SerializedName("is_deleteable")
  private Boolean isDeleteable = null;

  @SerializedName("is_downloadable")
  private Boolean isDownloadable = null;

  @SerializedName("is_moveable")
  private Boolean isMoveable = null;

  @SerializedName("is_quarantinable")
  private Boolean isQuarantinable = null;

  @SerializedName("is_quarantined")
  private Boolean isQuarantined = null;

  @SerializedName("is_resyncable")
  private Boolean isResyncable = null;

  @SerializedName("is_security_scannable")
  private Boolean isSecurityScannable = null;

  @SerializedName("is_sync_awaiting")
  private Boolean isSyncAwaiting = null;

  @SerializedName("is_sync_completed")
  private Boolean isSyncCompleted = null;

  @SerializedName("is_sync_failed")
  private Boolean isSyncFailed = null;

  @SerializedName("is_sync_in_flight")
  private Boolean isSyncInFlight = null;

  @SerializedName("is_sync_in_progress")
  private Boolean isSyncInProgress = null;

  @SerializedName("self_url")
  private String selfUrl = null;

  @SerializedName("stage")
  private java.math.BigInteger stage = null;

  @SerializedName("stage_str")
  private String stageStr = null;

  @SerializedName("stage_updated_at")
  private OffsetDateTime stageUpdatedAt = null;

  @SerializedName("status")
  private java.math.BigInteger status = null;

  @SerializedName("status_reason")
  private String statusReason = null;

  @SerializedName("status_str")
  private String statusStr = null;

  @SerializedName("status_updated_at")
  private OffsetDateTime statusUpdatedAt = null;

  @SerializedName("sync_finished_at")
  private OffsetDateTime syncFinishedAt = null;

  @SerializedName("sync_progress")
  private java.math.BigInteger syncProgress = null;

   /**
   * Get isCancellable
   * @return isCancellable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsCancellable() {
    return isCancellable;
  }

   /**
   * Get isCopyable
   * @return isCopyable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsCopyable() {
    return isCopyable;
  }

   /**
   * Get isDeleteable
   * @return isDeleteable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDeleteable() {
    return isDeleteable;
  }

   /**
   * Get isDownloadable
   * @return isDownloadable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDownloadable() {
    return isDownloadable;
  }

   /**
   * Get isMoveable
   * @return isMoveable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsMoveable() {
    return isMoveable;
  }

   /**
   * Get isQuarantinable
   * @return isQuarantinable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsQuarantinable() {
    return isQuarantinable;
  }

   /**
   * Get isQuarantined
   * @return isQuarantined
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsQuarantined() {
    return isQuarantined;
  }

   /**
   * Get isResyncable
   * @return isResyncable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsResyncable() {
    return isResyncable;
  }

   /**
   * Get isSecurityScannable
   * @return isSecurityScannable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSecurityScannable() {
    return isSecurityScannable;
  }

   /**
   * Get isSyncAwaiting
   * @return isSyncAwaiting
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncAwaiting() {
    return isSyncAwaiting;
  }

   /**
   * Get isSyncCompleted
   * @return isSyncCompleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncCompleted() {
    return isSyncCompleted;
  }

   /**
   * Get isSyncFailed
   * @return isSyncFailed
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncFailed() {
    return isSyncFailed;
  }

   /**
   * Get isSyncInFlight
   * @return isSyncInFlight
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncInFlight() {
    return isSyncInFlight;
  }

   /**
   * Get isSyncInProgress
   * @return isSyncInProgress
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSyncInProgress() {
    return isSyncInProgress;
  }

   /**
   * Get selfUrl
   * @return selfUrl
  **/
  @ApiModelProperty(value = "")
  public String getSelfUrl() {
    return selfUrl;
  }

   /**
   * The synchronisation (in progress) stage of the package.
   * @return stage
  **/
  @ApiModelProperty(value = "The synchronisation (in progress) stage of the package.")
  public java.math.BigInteger getStage() {
    return stage;
  }

   /**
   * Get stageStr
   * @return stageStr
  **/
  @ApiModelProperty(value = "")
  public String getStageStr() {
    return stageStr;
  }

   /**
   * The datetime the package stage was updated at.
   * @return stageUpdatedAt
  **/
  @Valid
  @ApiModelProperty(value = "The datetime the package stage was updated at.")
  public OffsetDateTime getStageUpdatedAt() {
    return stageUpdatedAt;
  }

   /**
   * The synchronisation status of the package.
   * @return status
  **/
  @ApiModelProperty(value = "The synchronisation status of the package.")
  public java.math.BigInteger getStatus() {
    return status;
  }

   /**
   * A textual description for the synchronous status reason (if any
   * @return statusReason
  **/
  @ApiModelProperty(value = "A textual description for the synchronous status reason (if any")
  public String getStatusReason() {
    return statusReason;
  }

   /**
   * Get statusStr
   * @return statusStr
  **/
  @ApiModelProperty(value = "")
  public String getStatusStr() {
    return statusStr;
  }

   /**
   * The datetime the package status was updated at.
   * @return statusUpdatedAt
  **/
  @Valid
  @ApiModelProperty(value = "The datetime the package status was updated at.")
  public OffsetDateTime getStatusUpdatedAt() {
    return statusUpdatedAt;
  }

   /**
   * The datetime the package sync was finished at.
   * @return syncFinishedAt
  **/
  @Valid
  @ApiModelProperty(value = "The datetime the package sync was finished at.")
  public OffsetDateTime getSyncFinishedAt() {
    return syncFinishedAt;
  }

   /**
   * Synchronisation progress (from 0-100)
   * @return syncProgress
  **/
  @ApiModelProperty(value = "Synchronisation progress (from 0-100)")
  public java.math.BigInteger getSyncProgress() {
    return syncProgress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageStatus packageStatus = (PackageStatus) o;
    return Objects.equals(this.isCancellable, packageStatus.isCancellable) &&
        Objects.equals(this.isCopyable, packageStatus.isCopyable) &&
        Objects.equals(this.isDeleteable, packageStatus.isDeleteable) &&
        Objects.equals(this.isDownloadable, packageStatus.isDownloadable) &&
        Objects.equals(this.isMoveable, packageStatus.isMoveable) &&
        Objects.equals(this.isQuarantinable, packageStatus.isQuarantinable) &&
        Objects.equals(this.isQuarantined, packageStatus.isQuarantined) &&
        Objects.equals(this.isResyncable, packageStatus.isResyncable) &&
        Objects.equals(this.isSecurityScannable, packageStatus.isSecurityScannable) &&
        Objects.equals(this.isSyncAwaiting, packageStatus.isSyncAwaiting) &&
        Objects.equals(this.isSyncCompleted, packageStatus.isSyncCompleted) &&
        Objects.equals(this.isSyncFailed, packageStatus.isSyncFailed) &&
        Objects.equals(this.isSyncInFlight, packageStatus.isSyncInFlight) &&
        Objects.equals(this.isSyncInProgress, packageStatus.isSyncInProgress) &&
        Objects.equals(this.selfUrl, packageStatus.selfUrl) &&
        Objects.equals(this.stage, packageStatus.stage) &&
        Objects.equals(this.stageStr, packageStatus.stageStr) &&
        Objects.equals(this.stageUpdatedAt, packageStatus.stageUpdatedAt) &&
        Objects.equals(this.status, packageStatus.status) &&
        Objects.equals(this.statusReason, packageStatus.statusReason) &&
        Objects.equals(this.statusStr, packageStatus.statusStr) &&
        Objects.equals(this.statusUpdatedAt, packageStatus.statusUpdatedAt) &&
        Objects.equals(this.syncFinishedAt, packageStatus.syncFinishedAt) &&
        Objects.equals(this.syncProgress, packageStatus.syncProgress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isCancellable, isCopyable, isDeleteable, isDownloadable, isMoveable, isQuarantinable, isQuarantined, isResyncable, isSecurityScannable, isSyncAwaiting, isSyncCompleted, isSyncFailed, isSyncInFlight, isSyncInProgress, selfUrl, stage, stageStr, stageUpdatedAt, status, statusReason, statusStr, statusUpdatedAt, syncFinishedAt, syncProgress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageStatus {\n");
    
    sb.append("    isCancellable: ").append(toIndentedString(isCancellable)).append("\n");
    sb.append("    isCopyable: ").append(toIndentedString(isCopyable)).append("\n");
    sb.append("    isDeleteable: ").append(toIndentedString(isDeleteable)).append("\n");
    sb.append("    isDownloadable: ").append(toIndentedString(isDownloadable)).append("\n");
    sb.append("    isMoveable: ").append(toIndentedString(isMoveable)).append("\n");
    sb.append("    isQuarantinable: ").append(toIndentedString(isQuarantinable)).append("\n");
    sb.append("    isQuarantined: ").append(toIndentedString(isQuarantined)).append("\n");
    sb.append("    isResyncable: ").append(toIndentedString(isResyncable)).append("\n");
    sb.append("    isSecurityScannable: ").append(toIndentedString(isSecurityScannable)).append("\n");
    sb.append("    isSyncAwaiting: ").append(toIndentedString(isSyncAwaiting)).append("\n");
    sb.append("    isSyncCompleted: ").append(toIndentedString(isSyncCompleted)).append("\n");
    sb.append("    isSyncFailed: ").append(toIndentedString(isSyncFailed)).append("\n");
    sb.append("    isSyncInFlight: ").append(toIndentedString(isSyncInFlight)).append("\n");
    sb.append("    isSyncInProgress: ").append(toIndentedString(isSyncInProgress)).append("\n");
    sb.append("    selfUrl: ").append(toIndentedString(selfUrl)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    stageStr: ").append(toIndentedString(stageStr)).append("\n");
    sb.append("    stageUpdatedAt: ").append(toIndentedString(stageUpdatedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    statusStr: ").append(toIndentedString(statusStr)).append("\n");
    sb.append("    statusUpdatedAt: ").append(toIndentedString(statusUpdatedAt)).append("\n");
    sb.append("    syncFinishedAt: ").append(toIndentedString(syncFinishedAt)).append("\n");
    sb.append("    syncProgress: ").append(toIndentedString(syncProgress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

