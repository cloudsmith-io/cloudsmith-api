/*
 * Cloudsmith API
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.cloudsmith.api.models.FormatsDistributions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Format
 */

public class Format implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("description")
  private String description = null;

  @SerializedName("distributions")
  private List<FormatsDistributions> distributions = null;

  @SerializedName("extensions")
  private List<String> extensions = new ArrayList<>();

  @SerializedName("name")
  private String name = null;

  @SerializedName("premium")
  private Boolean premium = null;

  @SerializedName("premium_plan_id")
  private String premiumPlanId = null;

  @SerializedName("premium_plan_name")
  private String premiumPlanName = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("supports")
  private Object supports = null;

  public Format description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the package format
   * @return description
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Description of the package format")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Format distributions(List<FormatsDistributions> distributions) {
    this.distributions = distributions;
    return this;
  }

  public Format addDistributionsItem(FormatsDistributions distributionsItem) {
    if (this.distributions == null) {
      this.distributions = new ArrayList<>();
    }
    this.distributions.add(distributionsItem);
    return this;
  }

   /**
   * The distributions supported by this package format
   * @return distributions
  **/
  @Valid
  @ApiModelProperty(value = "The distributions supported by this package format")
  public List<FormatsDistributions> getDistributions() {
    return distributions;
  }

  public void setDistributions(List<FormatsDistributions> distributions) {
    this.distributions = distributions;
  }

  public Format extensions(List<String> extensions) {
    this.extensions = extensions;
    return this;
  }

  public Format addExtensionsItem(String extensionsItem) {
    this.extensions.add(extensionsItem);
    return this;
  }

   /**
   * A non-exhaustive list of extensions supported
   * @return extensions
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "A non-exhaustive list of extensions supported")
  public List<String> getExtensions() {
    return extensions;
  }

  public void setExtensions(List<String> extensions) {
    this.extensions = extensions;
  }

  public Format name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name for the package format
   * @return name
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Name for the package format")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Format premium(Boolean premium) {
    this.premium = premium;
    return this;
  }

   /**
   * If true the package format is a premium-only feature
   * @return premium
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "If true the package format is a premium-only feature")
  public Boolean isPremium() {
    return premium;
  }

  public void setPremium(Boolean premium) {
    this.premium = premium;
  }

  public Format premiumPlanId(String premiumPlanId) {
    this.premiumPlanId = premiumPlanId;
    return this;
  }

   /**
   * The minimum plan id required for this package format
   * @return premiumPlanId
  **/
  @ApiModelProperty(value = "The minimum plan id required for this package format")
  public String getPremiumPlanId() {
    return premiumPlanId;
  }

  public void setPremiumPlanId(String premiumPlanId) {
    this.premiumPlanId = premiumPlanId;
  }

  public Format premiumPlanName(String premiumPlanName) {
    this.premiumPlanName = premiumPlanName;
    return this;
  }

   /**
   * The minimum plan name required for this package format
   * @return premiumPlanName
  **/
  @ApiModelProperty(value = "The minimum plan name required for this package format")
  public String getPremiumPlanName() {
    return premiumPlanName;
  }

  public void setPremiumPlanName(String premiumPlanName) {
    this.premiumPlanName = premiumPlanName;
  }

  public Format slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Slug for the package format
   * @return slug
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Slug for the package format")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public Format supports(Object supports) {
    this.supports = supports;
    return this;
  }

   /**
   * A set of what the package format supports
   * @return supports
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "A set of what the package format supports")
  public Object getSupports() {
    return supports;
  }

  public void setSupports(Object supports) {
    this.supports = supports;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Format format = (Format) o;
    return Objects.equals(this.description, format.description) &&
        Objects.equals(this.distributions, format.distributions) &&
        Objects.equals(this.extensions, format.extensions) &&
        Objects.equals(this.name, format.name) &&
        Objects.equals(this.premium, format.premium) &&
        Objects.equals(this.premiumPlanId, format.premiumPlanId) &&
        Objects.equals(this.premiumPlanName, format.premiumPlanName) &&
        Objects.equals(this.slug, format.slug) &&
        Objects.equals(this.supports, format.supports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, distributions, extensions, name, premium, premiumPlanId, premiumPlanName, slug, supports);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Format {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    distributions: ").append(toIndentedString(distributions)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    premium: ").append(toIndentedString(premium)).append("\n");
    sb.append("    premiumPlanId: ").append(toIndentedString(premiumPlanId)).append("\n");
    sb.append("    premiumPlanName: ").append(toIndentedString(premiumPlanName)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    supports: ").append(toIndentedString(supports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

