/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * MavenPackageUploadRequest
 */

public class MavenPackageUploadRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("artifact_id")
  private String artifactId = null;

  @SerializedName("group_id")
  private String groupId = null;

  @SerializedName("ivy_file")
  private String ivyFile = null;

  @SerializedName("javadoc_file")
  private String javadocFile = null;

  @SerializedName("package_file")
  private String packageFile = null;

  @SerializedName("packaging")
  private String packaging = null;

  @SerializedName("pom_file")
  private String pomFile = null;

  @SerializedName("republish")
  private Boolean republish = null;

  @SerializedName("sbt_version")
  private String sbtVersion = null;

  @SerializedName("scala_version")
  private String scalaVersion = null;

  @SerializedName("sources_file")
  private String sourcesFile = null;

  @SerializedName("tags")
  private String tags = null;

  @SerializedName("tests_file")
  private String testsFile = null;

  @SerializedName("version")
  private String version = null;

  public MavenPackageUploadRequest artifactId(String artifactId) {
    this.artifactId = artifactId;
    return this;
  }

   /**
   * The ID of the artifact.
   * @return artifactId
  **/
 @Size(min=1)  @ApiModelProperty(value = "The ID of the artifact.")
  public String getArtifactId() {
    return artifactId;
  }

  public void setArtifactId(String artifactId) {
    this.artifactId = artifactId;
  }

  public MavenPackageUploadRequest groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Artifact&#39;s group ID.
   * @return groupId
  **/
 @Size(max=2083)  @ApiModelProperty(value = "Artifact's group ID.")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public MavenPackageUploadRequest ivyFile(String ivyFile) {
    this.ivyFile = ivyFile;
    return this;
  }

   /**
   * The ivy file is an XML file describing the dependencies of the project.
   * @return ivyFile
  **/
 @Size(min=1)  @ApiModelProperty(value = "The ivy file is an XML file describing the dependencies of the project.")
  public String getIvyFile() {
    return ivyFile;
  }

  public void setIvyFile(String ivyFile) {
    this.ivyFile = ivyFile;
  }

  public MavenPackageUploadRequest javadocFile(String javadocFile) {
    this.javadocFile = javadocFile;
    return this;
  }

   /**
   * Adds bundled Java documentation to the Maven package
   * @return javadocFile
  **/
 @Size(min=1)  @ApiModelProperty(value = "Adds bundled Java documentation to the Maven package")
  public String getJavadocFile() {
    return javadocFile;
  }

  public void setJavadocFile(String javadocFile) {
    this.javadocFile = javadocFile;
  }

  public MavenPackageUploadRequest packageFile(String packageFile) {
    this.packageFile = packageFile;
    return this;
  }

   /**
   * The primary file for the package.
   * @return packageFile
  **/
  @NotNull
 @Size(min=1)  @ApiModelProperty(required = true, value = "The primary file for the package.")
  public String getPackageFile() {
    return packageFile;
  }

  public void setPackageFile(String packageFile) {
    this.packageFile = packageFile;
  }

  public MavenPackageUploadRequest packaging(String packaging) {
    this.packaging = packaging;
    return this;
  }

   /**
   * Artifact&#39;s Maven packaging type.
   * @return packaging
  **/
 @Size(max=64)  @ApiModelProperty(value = "Artifact's Maven packaging type.")
  public String getPackaging() {
    return packaging;
  }

  public void setPackaging(String packaging) {
    this.packaging = packaging;
  }

  public MavenPackageUploadRequest pomFile(String pomFile) {
    this.pomFile = pomFile;
    return this;
  }

   /**
   * The POM file is an XML file containing the Maven coordinates.
   * @return pomFile
  **/
 @Size(min=1)  @ApiModelProperty(value = "The POM file is an XML file containing the Maven coordinates.")
  public String getPomFile() {
    return pomFile;
  }

  public void setPomFile(String pomFile) {
    this.pomFile = pomFile;
  }

  public MavenPackageUploadRequest republish(Boolean republish) {
    this.republish = republish;
    return this;
  }

   /**
   * If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.
   * @return republish
  **/
  @ApiModelProperty(value = "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.")
  public Boolean isRepublish() {
    return republish;
  }

  public void setRepublish(Boolean republish) {
    this.republish = republish;
  }

  public MavenPackageUploadRequest sbtVersion(String sbtVersion) {
    this.sbtVersion = sbtVersion;
    return this;
  }

   /**
   * Get sbtVersion
   * @return sbtVersion
  **/
 @Size(max=64)  @ApiModelProperty(value = "")
  public String getSbtVersion() {
    return sbtVersion;
  }

  public void setSbtVersion(String sbtVersion) {
    this.sbtVersion = sbtVersion;
  }

  public MavenPackageUploadRequest scalaVersion(String scalaVersion) {
    this.scalaVersion = scalaVersion;
    return this;
  }

   /**
   * Get scalaVersion
   * @return scalaVersion
  **/
 @Size(max=64)  @ApiModelProperty(value = "")
  public String getScalaVersion() {
    return scalaVersion;
  }

  public void setScalaVersion(String scalaVersion) {
    this.scalaVersion = scalaVersion;
  }

  public MavenPackageUploadRequest sourcesFile(String sourcesFile) {
    this.sourcesFile = sourcesFile;
    return this;
  }

   /**
   * Adds bundled Java source code to the Maven package.
   * @return sourcesFile
  **/
 @Size(min=1)  @ApiModelProperty(value = "Adds bundled Java source code to the Maven package.")
  public String getSourcesFile() {
    return sourcesFile;
  }

  public void setSourcesFile(String sourcesFile) {
    this.sourcesFile = sourcesFile;
  }

  public MavenPackageUploadRequest tags(String tags) {
    this.tags = tags;
    return this;
  }

   /**
   * A comma-separated values list of tags to add to the package.
   * @return tags
  **/
 @Size(min=1,max=1024)  @ApiModelProperty(value = "A comma-separated values list of tags to add to the package.")
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }

  public MavenPackageUploadRequest testsFile(String testsFile) {
    this.testsFile = testsFile;
    return this;
  }

   /**
   * Adds bundled Java tests to the Maven package.
   * @return testsFile
  **/
 @Size(min=1)  @ApiModelProperty(value = "Adds bundled Java tests to the Maven package.")
  public String getTestsFile() {
    return testsFile;
  }

  public void setTestsFile(String testsFile) {
    this.testsFile = testsFile;
  }

  public MavenPackageUploadRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The raw version for this package.
   * @return version
  **/
 @Size(max=128)  @ApiModelProperty(value = "The raw version for this package.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MavenPackageUploadRequest mavenPackageUploadRequest = (MavenPackageUploadRequest) o;
    return Objects.equals(this.artifactId, mavenPackageUploadRequest.artifactId) &&
        Objects.equals(this.groupId, mavenPackageUploadRequest.groupId) &&
        Objects.equals(this.ivyFile, mavenPackageUploadRequest.ivyFile) &&
        Objects.equals(this.javadocFile, mavenPackageUploadRequest.javadocFile) &&
        Objects.equals(this.packageFile, mavenPackageUploadRequest.packageFile) &&
        Objects.equals(this.packaging, mavenPackageUploadRequest.packaging) &&
        Objects.equals(this.pomFile, mavenPackageUploadRequest.pomFile) &&
        Objects.equals(this.republish, mavenPackageUploadRequest.republish) &&
        Objects.equals(this.sbtVersion, mavenPackageUploadRequest.sbtVersion) &&
        Objects.equals(this.scalaVersion, mavenPackageUploadRequest.scalaVersion) &&
        Objects.equals(this.sourcesFile, mavenPackageUploadRequest.sourcesFile) &&
        Objects.equals(this.tags, mavenPackageUploadRequest.tags) &&
        Objects.equals(this.testsFile, mavenPackageUploadRequest.testsFile) &&
        Objects.equals(this.version, mavenPackageUploadRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactId, groupId, ivyFile, javadocFile, packageFile, packaging, pomFile, republish, sbtVersion, scalaVersion, sourcesFile, tags, testsFile, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MavenPackageUploadRequest {\n");
    
    sb.append("    artifactId: ").append(toIndentedString(artifactId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    ivyFile: ").append(toIndentedString(ivyFile)).append("\n");
    sb.append("    javadocFile: ").append(toIndentedString(javadocFile)).append("\n");
    sb.append("    packageFile: ").append(toIndentedString(packageFile)).append("\n");
    sb.append("    packaging: ").append(toIndentedString(packaging)).append("\n");
    sb.append("    pomFile: ").append(toIndentedString(pomFile)).append("\n");
    sb.append("    republish: ").append(toIndentedString(republish)).append("\n");
    sb.append("    sbtVersion: ").append(toIndentedString(sbtVersion)).append("\n");
    sb.append("    scalaVersion: ").append(toIndentedString(scalaVersion)).append("\n");
    sb.append("    sourcesFile: ").append(toIndentedString(sourcesFile)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    testsFile: ").append(toIndentedString(testsFile)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

