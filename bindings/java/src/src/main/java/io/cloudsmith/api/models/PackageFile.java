/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * PackageFile
 */

public class PackageFile implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("cdn_url")
  private String cdnUrl = null;

  @SerializedName("checksum_md5")
  private String checksumMd5 = null;

  @SerializedName("checksum_sha1")
  private String checksumSha1 = null;

  @SerializedName("checksum_sha256")
  private String checksumSha256 = null;

  @SerializedName("checksum_sha512")
  private String checksumSha512 = null;

  @SerializedName("downloads")
  private Integer downloads = null;

  @SerializedName("filename")
  private String filename = null;

  @SerializedName("is_downloadable")
  private Boolean isDownloadable = null;

  @SerializedName("is_primary")
  private Boolean isPrimary = null;

  @SerializedName("is_synchronised")
  private Boolean isSynchronised = null;

  @SerializedName("signature_url")
  private String signatureUrl = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("slug_perm")
  private String slugPerm = null;

  @SerializedName("tag")
  private String tag = null;

   /**
   * Get cdnUrl
   * @return cdnUrl
  **/
  @ApiModelProperty(value = "")
  public String getCdnUrl() {
    return cdnUrl;
  }

   /**
   * Get checksumMd5
   * @return checksumMd5
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getChecksumMd5() {
    return checksumMd5;
  }

   /**
   * Get checksumSha1
   * @return checksumSha1
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getChecksumSha1() {
    return checksumSha1;
  }

   /**
   * Get checksumSha256
   * @return checksumSha256
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getChecksumSha256() {
    return checksumSha256;
  }

   /**
   * Get checksumSha512
   * @return checksumSha512
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getChecksumSha512() {
    return checksumSha512;
  }

   /**
   * Get downloads
   * @return downloads
  **/
  @ApiModelProperty(value = "")
  public Integer getDownloads() {
    return downloads;
  }

   /**
   * Get filename
   * @return filename
  **/
 @Size(min=1)  @ApiModelProperty(value = "")
  public String getFilename() {
    return filename;
  }

   /**
   * Get isDownloadable
   * @return isDownloadable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDownloadable() {
    return isDownloadable;
  }

   /**
   * Get isPrimary
   * @return isPrimary
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPrimary() {
    return isPrimary;
  }

   /**
   * Get isSynchronised
   * @return isSynchronised
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSynchronised() {
    return isSynchronised;
  }

   /**
   * Get signatureUrl
   * @return signatureUrl
  **/
  @ApiModelProperty(value = "")
  public String getSignatureUrl() {
    return signatureUrl;
  }

   /**
   * The calculated size of the file.
   * @return size
  **/
  @ApiModelProperty(value = "The calculated size of the file.")
  public Integer getSize() {
    return size;
  }

   /**
   * Get slugPerm
   * @return slugPerm
  **/
 @Pattern(regexp="^[-a-zA-Z0-9_]+$") @Size(min=1)  @ApiModelProperty(value = "")
  public String getSlugPerm() {
    return slugPerm;
  }

   /**
   * Freeform descriptor that describes what the file is.
   * @return tag
  **/
 @Size(min=1)  @ApiModelProperty(value = "Freeform descriptor that describes what the file is.")
  public String getTag() {
    return tag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageFile packageFile = (PackageFile) o;
    return Objects.equals(this.cdnUrl, packageFile.cdnUrl) &&
        Objects.equals(this.checksumMd5, packageFile.checksumMd5) &&
        Objects.equals(this.checksumSha1, packageFile.checksumSha1) &&
        Objects.equals(this.checksumSha256, packageFile.checksumSha256) &&
        Objects.equals(this.checksumSha512, packageFile.checksumSha512) &&
        Objects.equals(this.downloads, packageFile.downloads) &&
        Objects.equals(this.filename, packageFile.filename) &&
        Objects.equals(this.isDownloadable, packageFile.isDownloadable) &&
        Objects.equals(this.isPrimary, packageFile.isPrimary) &&
        Objects.equals(this.isSynchronised, packageFile.isSynchronised) &&
        Objects.equals(this.signatureUrl, packageFile.signatureUrl) &&
        Objects.equals(this.size, packageFile.size) &&
        Objects.equals(this.slugPerm, packageFile.slugPerm) &&
        Objects.equals(this.tag, packageFile.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cdnUrl, checksumMd5, checksumSha1, checksumSha256, checksumSha512, downloads, filename, isDownloadable, isPrimary, isSynchronised, signatureUrl, size, slugPerm, tag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageFile {\n");
    
    sb.append("    cdnUrl: ").append(toIndentedString(cdnUrl)).append("\n");
    sb.append("    checksumMd5: ").append(toIndentedString(checksumMd5)).append("\n");
    sb.append("    checksumSha1: ").append(toIndentedString(checksumSha1)).append("\n");
    sb.append("    checksumSha256: ").append(toIndentedString(checksumSha256)).append("\n");
    sb.append("    checksumSha512: ").append(toIndentedString(checksumSha512)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    isDownloadable: ").append(toIndentedString(isDownloadable)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("    isSynchronised: ").append(toIndentedString(isSynchronised)).append("\n");
    sb.append("    signatureUrl: ").append(toIndentedString(signatureUrl)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    slugPerm: ").append(toIndentedString(slugPerm)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

