/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * VulnerabilityScanVersion
 */

public class VulnerabilityScanVersion implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("major")
  private java.math.BigInteger major = null;

  @SerializedName("minor")
  private java.math.BigInteger minor = null;

  @SerializedName("operator")
  private String operator = "";

  @SerializedName("patch")
  private java.math.BigInteger patch = null;

  @SerializedName("raw_version")
  private String rawVersion = "";

  @SerializedName("version")
  private String version = "";

  public VulnerabilityScanVersion major(java.math.BigInteger major) {
    this.major = major;
    return this;
  }

   /**
   * Get major
   * @return major
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public java.math.BigInteger getMajor() {
    return major;
  }

  public void setMajor(java.math.BigInteger major) {
    this.major = major;
  }

  public VulnerabilityScanVersion minor(java.math.BigInteger minor) {
    this.minor = minor;
    return this;
  }

   /**
   * Get minor
   * @return minor
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public java.math.BigInteger getMinor() {
    return minor;
  }

  public void setMinor(java.math.BigInteger minor) {
    this.minor = minor;
  }

  public VulnerabilityScanVersion operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
 @Size(min=1,max=32)  @ApiModelProperty(value = "")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public VulnerabilityScanVersion patch(java.math.BigInteger patch) {
    this.patch = patch;
    return this;
  }

   /**
   * Get patch
   * @return patch
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public java.math.BigInteger getPatch() {
    return patch;
  }

  public void setPatch(java.math.BigInteger patch) {
    this.patch = patch;
  }

  public VulnerabilityScanVersion rawVersion(String rawVersion) {
    this.rawVersion = rawVersion;
    return this;
  }

   /**
   * Get rawVersion
   * @return rawVersion
  **/
 @Size(min=1,max=128)  @ApiModelProperty(value = "")
  public String getRawVersion() {
    return rawVersion;
  }

  public void setRawVersion(String rawVersion) {
    this.rawVersion = rawVersion;
  }

  public VulnerabilityScanVersion version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
 @Size(min=1,max=128)  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityScanVersion vulnerabilityScanVersion = (VulnerabilityScanVersion) o;
    return Objects.equals(this.major, vulnerabilityScanVersion.major) &&
        Objects.equals(this.minor, vulnerabilityScanVersion.minor) &&
        Objects.equals(this.operator, vulnerabilityScanVersion.operator) &&
        Objects.equals(this.patch, vulnerabilityScanVersion.patch) &&
        Objects.equals(this.rawVersion, vulnerabilityScanVersion.rawVersion) &&
        Objects.equals(this.version, vulnerabilityScanVersion.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(major, minor, operator, patch, rawVersion, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityScanVersion {\n");
    
    sb.append("    major: ").append(toIndentedString(major)).append("\n");
    sb.append("    minor: ").append(toIndentedString(minor)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("    rawVersion: ").append(toIndentedString(rawVersion)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

