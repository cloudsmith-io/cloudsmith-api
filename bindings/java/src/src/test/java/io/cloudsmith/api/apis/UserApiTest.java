/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.apis;

import io.cloudsmith.api.models.ErrorDetail;
import io.cloudsmith.api.models.InlineResponse2001;
import io.cloudsmith.api.models.UserAuthToken;
import io.cloudsmith.api.models.UserAuthTokenRequest;
import io.cloudsmith.api.models.UserAuthenticationToken;
import io.cloudsmith.api.models.UserBrief;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Provide a brief for the current user (if any).
     *
     * Provide a brief for the current user (if any).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userSelfTest() throws Exception {
        UserBrief response = api.userSelf();

        // TODO: test validations
    }
    
    /**
     * Create or retrieve API token for a user.
     *
     * Handles both: - Users authenticating with basic credentials to get a token - Two-factor authentication flow
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userTokenCreateTest() throws Exception {
        UserAuthTokenRequest data = null;
        UserAuthToken response = api.userTokenCreate(data);

        // TODO: test validations
    }
    
    /**
     * Create an API key for the user that is currently authenticated.
     *
     * Create an API key for the user that is currently authenticated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userTokensCreateTest() throws Exception {
        UserAuthenticationToken response = api.userTokensCreate();

        // TODO: test validations
    }
    
    /**
     * Retrieve the API key assigned to the user that is currently authenticated.
     *
     * Retrieve the API key assigned to the user that is currently authenticated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userTokensListTest() throws Exception {
        java.math.BigInteger page = null;
        java.math.BigInteger pageSize = null;
        InlineResponse2001 response = api.userTokensList(page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Refresh the specified API key for the user that is currently authenticated.
     *
     * Refresh the specified API key for the user that is currently authenticated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userTokensRefreshTest() throws Exception {
        String slugPerm = null;
        UserAuthenticationToken response = api.userTokensRefresh(slugPerm);

        // TODO: test validations
    }
    
}
