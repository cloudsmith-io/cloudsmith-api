/*
 * Cloudsmith API (v1)
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.cloudsmith.api.apis;

import io.cloudsmith.api.models.ErrorDetail;
import io.cloudsmith.api.models.RepositoryWebhook;
import io.cloudsmith.api.models.RepositoryWebhookRequest;
import io.cloudsmith.api.models.RepositoryWebhookRequestPatch;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Ignore
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    
    /**
     * Create a specific webhook in a repository.
     *
     * Create a specific webhook in a repository.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void webhooksCreateTest() throws Exception {
        String owner = null;
        String repo = null;
        RepositoryWebhookRequest data = null;
        RepositoryWebhook response = api.webhooksCreate(owner, repo, data);

        // TODO: test validations
    }
    
    /**
     * Delete a specific webhook in a repository.
     *
     * Delete a specific webhook in a repository.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void webhooksDeleteTest() throws Exception {
        String owner = null;
        String repo = null;
        String identifier = null;
        api.webhooksDelete(owner, repo, identifier);

        // TODO: test validations
    }
    
    /**
     * Get a list of all webhooks in a repository.
     *
     * Get a list of all webhooks in a repository.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void webhooksListTest() throws Exception {
        String owner = null;
        String repo = null;
        java.math.BigInteger page = null;
        java.math.BigInteger pageSize = null;
        List<RepositoryWebhook> response = api.webhooksList(owner, repo, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Update a specific webhook in a repository.
     *
     * Update a specific webhook in a repository.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void webhooksPartialUpdateTest() throws Exception {
        String owner = null;
        String repo = null;
        String identifier = null;
        RepositoryWebhookRequestPatch data = null;
        RepositoryWebhook response = api.webhooksPartialUpdate(owner, repo, identifier, data);

        // TODO: test validations
    }
    
    /**
     * Views for working with repository webhooks.
     *
     * Views for working with repository webhooks.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void webhooksReadTest() throws Exception {
        String owner = null;
        String repo = null;
        String identifier = null;
        RepositoryWebhook response = api.webhooksRead(owner, repo, identifier);

        // TODO: test validations
    }
    
}
