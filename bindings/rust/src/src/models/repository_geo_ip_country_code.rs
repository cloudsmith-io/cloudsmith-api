/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RepositoryGeoIpCountryCode {
  /// The allowed country codes for this repository
  #[serde(rename = "allow")]
  allow: Vec<String>,
  /// The denied country codes for this repository
  #[serde(rename = "deny")]
  deny: Vec<String>
}

impl RepositoryGeoIpCountryCode {
  pub fn new(allow: Vec<String>, deny: Vec<String>) -> RepositoryGeoIpCountryCode {
    RepositoryGeoIpCountryCode {
      allow: allow,
      deny: deny
    }
  }

  pub fn set_allow(&mut self, allow: Vec<String>) {
    self.allow = allow;
  }

  pub fn with_allow(mut self, allow: Vec<String>) -> RepositoryGeoIpCountryCode {
    self.allow = allow;
    self
  }

  pub fn allow(&self) -> &Vec<String> {
    &self.allow
  }


  pub fn set_deny(&mut self, deny: Vec<String>) {
    self.deny = deny;
  }

  pub fn with_deny(mut self, deny: Vec<String>) -> RepositoryGeoIpCountryCode {
    self.deny = deny;
    self
  }

  pub fn deny(&self) -> &Vec<String> {
    &self.deny
  }


}



