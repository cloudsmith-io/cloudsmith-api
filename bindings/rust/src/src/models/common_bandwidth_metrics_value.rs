/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CommonBandwidthMetricsValue : Average bandwidth usage in the specified period, e.g. a day

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CommonBandwidthMetricsValue {
  /// Bandwidth usage value
  #[serde(rename = "display")]
  display: String,
  /// Unit of measurement e.g. bytes
  #[serde(rename = "units")]
  units: Option<String>,
  /// Human readable version of display value
  #[serde(rename = "value")]
  value: i32
}

impl CommonBandwidthMetricsValue {
  /// Average bandwidth usage in the specified period, e.g. a day
  pub fn new(display: String, value: i32) -> CommonBandwidthMetricsValue {
    CommonBandwidthMetricsValue {
      display: display,
      units: None,
      value: value
    }
  }

  pub fn set_display(&mut self, display: String) {
    self.display = display;
  }

  pub fn with_display(mut self, display: String) -> CommonBandwidthMetricsValue {
    self.display = display;
    self
  }

  pub fn display(&self) -> &String {
    &self.display
  }


  pub fn set_units(&mut self, units: String) {
    self.units = Some(units);
  }

  pub fn with_units(mut self, units: String) -> CommonBandwidthMetricsValue {
    self.units = Some(units);
    self
  }

  pub fn units(&self) -> Option<&String> {
    self.units.as_ref()
  }

  pub fn reset_units(&mut self) {
    self.units = None;
  }

  pub fn set_value(&mut self, value: i32) {
    self.value = value;
  }

  pub fn with_value(mut self, value: i32) -> CommonBandwidthMetricsValue {
    self.value = value;
    self
  }

  pub fn value(&self) -> &i32 {
    &self.value
  }


}



