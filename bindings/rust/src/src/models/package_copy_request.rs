/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PackageCopyRequest {
  #[serde(rename = "destination")]
  destination: String,
  /// If true, the package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.
  #[serde(rename = "republish")]
  republish: Option<bool>
}

impl PackageCopyRequest {
  pub fn new(destination: String) -> PackageCopyRequest {
    PackageCopyRequest {
      destination: destination,
      republish: None
    }
  }

  pub fn set_destination(&mut self, destination: String) {
    self.destination = destination;
  }

  pub fn with_destination(mut self, destination: String) -> PackageCopyRequest {
    self.destination = destination;
    self
  }

  pub fn destination(&self) -> &String {
    &self.destination
  }


  pub fn set_republish(&mut self, republish: bool) {
    self.republish = Some(republish);
  }

  pub fn with_republish(mut self, republish: bool) -> PackageCopyRequest {
    self.republish = Some(republish);
    self
  }

  pub fn republish(&self) -> Option<&bool> {
    self.republish.as_ref()
  }

  pub fn reset_republish(&mut self) {
    self.republish = None;
  }

}



