/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrganizationGroupSync {
  #[serde(rename = "idp_key")]
  idp_key: String,
  #[serde(rename = "idp_value")]
  idp_value: String,
  #[serde(rename = "role")]
  role: Option<String>,
  #[serde(rename = "slug_perm")]
  slug_perm: Option<String>,
  #[serde(rename = "team")]
  team: String
}

impl OrganizationGroupSync {
  pub fn new(idp_key: String, idp_value: String, team: String) -> OrganizationGroupSync {
    OrganizationGroupSync {
      idp_key: idp_key,
      idp_value: idp_value,
      role: None,
      slug_perm: None,
      team: team
    }
  }

  pub fn set_idp_key(&mut self, idp_key: String) {
    self.idp_key = idp_key;
  }

  pub fn with_idp_key(mut self, idp_key: String) -> OrganizationGroupSync {
    self.idp_key = idp_key;
    self
  }

  pub fn idp_key(&self) -> &String {
    &self.idp_key
  }


  pub fn set_idp_value(&mut self, idp_value: String) {
    self.idp_value = idp_value;
  }

  pub fn with_idp_value(mut self, idp_value: String) -> OrganizationGroupSync {
    self.idp_value = idp_value;
    self
  }

  pub fn idp_value(&self) -> &String {
    &self.idp_value
  }


  pub fn set_role(&mut self, role: String) {
    self.role = Some(role);
  }

  pub fn with_role(mut self, role: String) -> OrganizationGroupSync {
    self.role = Some(role);
    self
  }

  pub fn role(&self) -> Option<&String> {
    self.role.as_ref()
  }

  pub fn reset_role(&mut self) {
    self.role = None;
  }

  pub fn set_slug_perm(&mut self, slug_perm: String) {
    self.slug_perm = Some(slug_perm);
  }

  pub fn with_slug_perm(mut self, slug_perm: String) -> OrganizationGroupSync {
    self.slug_perm = Some(slug_perm);
    self
  }

  pub fn slug_perm(&self) -> Option<&String> {
    self.slug_perm.as_ref()
  }

  pub fn reset_slug_perm(&mut self) {
    self.slug_perm = None;
  }

  pub fn set_team(&mut self, team: String) {
    self.team = team;
  }

  pub fn with_team(mut self, team: String) -> OrganizationGroupSync {
    self.team = team;
    self
  }

  pub fn team(&self) -> &String {
    &self.team
  }


}



