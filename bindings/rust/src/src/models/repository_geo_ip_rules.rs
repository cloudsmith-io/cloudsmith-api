/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RepositoryGeoIpRules {
  #[serde(rename = "cidr")]
  cidr: ::models::RepositoryGeoIpCidr,
  #[serde(rename = "country_code")]
  country_code: ::models::RepositoryGeoIpCountryCode
}

impl RepositoryGeoIpRules {
  pub fn new(cidr: ::models::RepositoryGeoIpCidr, country_code: ::models::RepositoryGeoIpCountryCode) -> RepositoryGeoIpRules {
    RepositoryGeoIpRules {
      cidr: cidr,
      country_code: country_code
    }
  }

  pub fn set_cidr(&mut self, cidr: ::models::RepositoryGeoIpCidr) {
    self.cidr = cidr;
  }

  pub fn with_cidr(mut self, cidr: ::models::RepositoryGeoIpCidr) -> RepositoryGeoIpRules {
    self.cidr = cidr;
    self
  }

  pub fn cidr(&self) -> &::models::RepositoryGeoIpCidr {
    &self.cidr
  }


  pub fn set_country_code(&mut self, country_code: ::models::RepositoryGeoIpCountryCode) {
    self.country_code = country_code;
  }

  pub fn with_country_code(mut self, country_code: ::models::RepositoryGeoIpCountryCode) -> RepositoryGeoIpRules {
    self.country_code = country_code;
    self
  }

  pub fn country_code(&self) -> &::models::RepositoryGeoIpCountryCode {
    &self.country_code
  }


}



