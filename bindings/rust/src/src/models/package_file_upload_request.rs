/* 
 * Cloudsmith API (v1)
 *
 * The API to the Cloudsmith Service
 *
 * OpenAPI spec version: v1
 * Contact: support@cloudsmith.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PackageFileUploadRequest {
  /// Filename for the package file upload.
  #[serde(rename = "filename")]
  filename: String,
  /// MD5 checksum for a POST-based package file upload.
  #[serde(rename = "md5_checksum")]
  md5_checksum: Option<String>,
  /// The method to use for package file upload.
  #[serde(rename = "method")]
  method: Option<String>,
  /// SHA256 checksum for a PUT-based package file upload.
  #[serde(rename = "sha256_checksum")]
  sha256_checksum: Option<String>
}

impl PackageFileUploadRequest {
  pub fn new(filename: String) -> PackageFileUploadRequest {
    PackageFileUploadRequest {
      filename: filename,
      md5_checksum: None,
      method: None,
      sha256_checksum: None
    }
  }

  pub fn set_filename(&mut self, filename: String) {
    self.filename = filename;
  }

  pub fn with_filename(mut self, filename: String) -> PackageFileUploadRequest {
    self.filename = filename;
    self
  }

  pub fn filename(&self) -> &String {
    &self.filename
  }


  pub fn set_md5_checksum(&mut self, md5_checksum: String) {
    self.md5_checksum = Some(md5_checksum);
  }

  pub fn with_md5_checksum(mut self, md5_checksum: String) -> PackageFileUploadRequest {
    self.md5_checksum = Some(md5_checksum);
    self
  }

  pub fn md5_checksum(&self) -> Option<&String> {
    self.md5_checksum.as_ref()
  }

  pub fn reset_md5_checksum(&mut self) {
    self.md5_checksum = None;
  }

  pub fn set_method(&mut self, method: String) {
    self.method = Some(method);
  }

  pub fn with_method(mut self, method: String) -> PackageFileUploadRequest {
    self.method = Some(method);
    self
  }

  pub fn method(&self) -> Option<&String> {
    self.method.as_ref()
  }

  pub fn reset_method(&mut self) {
    self.method = None;
  }

  pub fn set_sha256_checksum(&mut self, sha256_checksum: String) {
    self.sha256_checksum = Some(sha256_checksum);
  }

  pub fn with_sha256_checksum(mut self, sha256_checksum: String) -> PackageFileUploadRequest {
    self.sha256_checksum = Some(sha256_checksum);
    self
  }

  pub fn sha256_checksum(&self) -> Option<&String> {
    self.sha256_checksum.as_ref()
  }

  pub fn reset_sha256_checksum(&mut self) {
    self.sha256_checksum = None;
  }

}



