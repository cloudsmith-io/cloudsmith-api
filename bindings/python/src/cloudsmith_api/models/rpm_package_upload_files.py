# coding: utf-8

"""
    Cloudsmith API

    The API to the Cloudsmith Service

    OpenAPI spec version: v1
    Contact: support@cloudsmith.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RpmPackageUploadFiles(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cdn_url': 'str',
        'checksum_sha512': 'str',
        'is_primary': 'bool',
        'downloads': 'int',
        'is_synchronised': 'bool',
        'is_downloadable': 'bool',
        'filename': 'str',
        'tag': 'str',
        'checksum_md5': 'str',
        'checksum_sha256': 'str',
        'slug_perm': 'str',
        'checksum_sha1': 'str',
        'size': 'int'
    }

    attribute_map = {
        'cdn_url': 'cdn_url',
        'checksum_sha512': 'checksum_sha512',
        'is_primary': 'is_primary',
        'downloads': 'downloads',
        'is_synchronised': 'is_synchronised',
        'is_downloadable': 'is_downloadable',
        'filename': 'filename',
        'tag': 'tag',
        'checksum_md5': 'checksum_md5',
        'checksum_sha256': 'checksum_sha256',
        'slug_perm': 'slug_perm',
        'checksum_sha1': 'checksum_sha1',
        'size': 'size'
    }

    def __init__(self, cdn_url=None, checksum_sha512=None, is_primary=None, downloads=None, is_synchronised=None, is_downloadable=None, filename=None, tag=None, checksum_md5=None, checksum_sha256=None, slug_perm=None, checksum_sha1=None, size=None):
        """
        RpmPackageUploadFiles - a model defined in Swagger
        """

        self._cdn_url = None
        self._checksum_sha512 = None
        self._is_primary = None
        self._downloads = None
        self._is_synchronised = None
        self._is_downloadable = None
        self._filename = None
        self._tag = None
        self._checksum_md5 = None
        self._checksum_sha256 = None
        self._slug_perm = None
        self._checksum_sha1 = None
        self._size = None

        if cdn_url is not None:
          self.cdn_url = cdn_url
        if checksum_sha512 is not None:
          self.checksum_sha512 = checksum_sha512
        if is_primary is not None:
          self.is_primary = is_primary
        if downloads is not None:
          self.downloads = downloads
        if is_synchronised is not None:
          self.is_synchronised = is_synchronised
        if is_downloadable is not None:
          self.is_downloadable = is_downloadable
        if filename is not None:
          self.filename = filename
        if tag is not None:
          self.tag = tag
        if checksum_md5 is not None:
          self.checksum_md5 = checksum_md5
        if checksum_sha256 is not None:
          self.checksum_sha256 = checksum_sha256
        if slug_perm is not None:
          self.slug_perm = slug_perm
        if checksum_sha1 is not None:
          self.checksum_sha1 = checksum_sha1
        if size is not None:
          self.size = size

    @property
    def cdn_url(self):
        """
        Gets the cdn_url of this RpmPackageUploadFiles.
        

        :return: The cdn_url of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._cdn_url

    @cdn_url.setter
    def cdn_url(self, cdn_url):
        """
        Sets the cdn_url of this RpmPackageUploadFiles.
        

        :param cdn_url: The cdn_url of this RpmPackageUploadFiles.
        :type: str
        """

        self._cdn_url = cdn_url

    @property
    def checksum_sha512(self):
        """
        Gets the checksum_sha512 of this RpmPackageUploadFiles.
        

        :return: The checksum_sha512 of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._checksum_sha512

    @checksum_sha512.setter
    def checksum_sha512(self, checksum_sha512):
        """
        Sets the checksum_sha512 of this RpmPackageUploadFiles.
        

        :param checksum_sha512: The checksum_sha512 of this RpmPackageUploadFiles.
        :type: str
        """

        self._checksum_sha512 = checksum_sha512

    @property
    def is_primary(self):
        """
        Gets the is_primary of this RpmPackageUploadFiles.
        

        :return: The is_primary of this RpmPackageUploadFiles.
        :rtype: bool
        """
        return self._is_primary

    @is_primary.setter
    def is_primary(self, is_primary):
        """
        Sets the is_primary of this RpmPackageUploadFiles.
        

        :param is_primary: The is_primary of this RpmPackageUploadFiles.
        :type: bool
        """

        self._is_primary = is_primary

    @property
    def downloads(self):
        """
        Gets the downloads of this RpmPackageUploadFiles.
        The number of downloads for the package file.

        :return: The downloads of this RpmPackageUploadFiles.
        :rtype: int
        """
        return self._downloads

    @downloads.setter
    def downloads(self, downloads):
        """
        Sets the downloads of this RpmPackageUploadFiles.
        The number of downloads for the package file.

        :param downloads: The downloads of this RpmPackageUploadFiles.
        :type: int
        """

        self._downloads = downloads

    @property
    def is_synchronised(self):
        """
        Gets the is_synchronised of this RpmPackageUploadFiles.
        

        :return: The is_synchronised of this RpmPackageUploadFiles.
        :rtype: bool
        """
        return self._is_synchronised

    @is_synchronised.setter
    def is_synchronised(self, is_synchronised):
        """
        Sets the is_synchronised of this RpmPackageUploadFiles.
        

        :param is_synchronised: The is_synchronised of this RpmPackageUploadFiles.
        :type: bool
        """

        self._is_synchronised = is_synchronised

    @property
    def is_downloadable(self):
        """
        Gets the is_downloadable of this RpmPackageUploadFiles.
        

        :return: The is_downloadable of this RpmPackageUploadFiles.
        :rtype: bool
        """
        return self._is_downloadable

    @is_downloadable.setter
    def is_downloadable(self, is_downloadable):
        """
        Sets the is_downloadable of this RpmPackageUploadFiles.
        

        :param is_downloadable: The is_downloadable of this RpmPackageUploadFiles.
        :type: bool
        """

        self._is_downloadable = is_downloadable

    @property
    def filename(self):
        """
        Gets the filename of this RpmPackageUploadFiles.
        

        :return: The filename of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """
        Sets the filename of this RpmPackageUploadFiles.
        

        :param filename: The filename of this RpmPackageUploadFiles.
        :type: str
        """

        self._filename = filename

    @property
    def tag(self):
        """
        Gets the tag of this RpmPackageUploadFiles.
        Freeform descriptor that describes what the file is.

        :return: The tag of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """
        Sets the tag of this RpmPackageUploadFiles.
        Freeform descriptor that describes what the file is.

        :param tag: The tag of this RpmPackageUploadFiles.
        :type: str
        """

        self._tag = tag

    @property
    def checksum_md5(self):
        """
        Gets the checksum_md5 of this RpmPackageUploadFiles.
        

        :return: The checksum_md5 of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._checksum_md5

    @checksum_md5.setter
    def checksum_md5(self, checksum_md5):
        """
        Sets the checksum_md5 of this RpmPackageUploadFiles.
        

        :param checksum_md5: The checksum_md5 of this RpmPackageUploadFiles.
        :type: str
        """

        self._checksum_md5 = checksum_md5

    @property
    def checksum_sha256(self):
        """
        Gets the checksum_sha256 of this RpmPackageUploadFiles.
        

        :return: The checksum_sha256 of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._checksum_sha256

    @checksum_sha256.setter
    def checksum_sha256(self, checksum_sha256):
        """
        Sets the checksum_sha256 of this RpmPackageUploadFiles.
        

        :param checksum_sha256: The checksum_sha256 of this RpmPackageUploadFiles.
        :type: str
        """

        self._checksum_sha256 = checksum_sha256

    @property
    def slug_perm(self):
        """
        Gets the slug_perm of this RpmPackageUploadFiles.
        

        :return: The slug_perm of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._slug_perm

    @slug_perm.setter
    def slug_perm(self, slug_perm):
        """
        Sets the slug_perm of this RpmPackageUploadFiles.
        

        :param slug_perm: The slug_perm of this RpmPackageUploadFiles.
        :type: str
        """

        self._slug_perm = slug_perm

    @property
    def checksum_sha1(self):
        """
        Gets the checksum_sha1 of this RpmPackageUploadFiles.
        

        :return: The checksum_sha1 of this RpmPackageUploadFiles.
        :rtype: str
        """
        return self._checksum_sha1

    @checksum_sha1.setter
    def checksum_sha1(self, checksum_sha1):
        """
        Sets the checksum_sha1 of this RpmPackageUploadFiles.
        

        :param checksum_sha1: The checksum_sha1 of this RpmPackageUploadFiles.
        :type: str
        """

        self._checksum_sha1 = checksum_sha1

    @property
    def size(self):
        """
        Gets the size of this RpmPackageUploadFiles.
        The calculated size of the file.

        :return: The size of this RpmPackageUploadFiles.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """
        Sets the size of this RpmPackageUploadFiles.
        The calculated size of the file.

        :param size: The size of this RpmPackageUploadFiles.
        :type: int
        """

        self._size = size

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RpmPackageUploadFiles):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
